@rom
@org=$4000
@start=$7554

; Loading Screen
;
; #UDGTABLE
; { =h Harrier Attack Loading Screen. }
; { #SCR$02(loading) }
; UDGTABLE#
@label=Loading
b$4000 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; {Pixels
 $4020 DEFB $00,$F8,$08,$02,$00,$0F,$00,$0F,$00,$1E,$00,$00,$80,$0F,$00,$00,$00,$02,$00,$F8,$04,$F8,$04,$02,$00,$04,$00,$10,$00,$00,$30,$00 ;
 $4040 DEFB $00,$7F,$FE,$FF,$F8,$7F,$30,$7F,$30,$0C,$00,$FF,$80,$7F,$30,$00,$00,$FF,$F8,$01,$E0,$01,$E0,$FF,$F8,$70,$00,$FF,$80,$00,$08,$00 ;
 $4060 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4080 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $40A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0B,$C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $40C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$4D,$FC,$E0,$00,$00,$7B,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $40E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$80,$37,$0D,$AE,$B9,$30,$7E,$E7,$CA,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4100 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4120 DEFB $00,$F0,$4C,$1F,$80,$3F,$00,$3F,$00,$3E,$00,$FF,$F8,$3F,$00,$00,$00,$1F,$80,$7B,$FE,$7B,$FE,$1F,$80,$0F,$E0,$70,$38,$00,$1C,$00 ;
 $4140 DEFB $00,$FF,$FC,$7F,$F0,$3E,$10,$3E,$10,$0E,$00,$F8,$00,$3E,$10,$00,$00,$7F,$F0,$01,$E0,$01,$E0,$7F,$F0,$38,$00,$7F,$00,$00,$08,$00 ;
 $4160 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4180 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $41A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$05,$60,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $41C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$20,$11,$EF,$BF,$7B,$86,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $41E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$C0,$6C,$03,$5D,$76,$9F,$1D,$67,$E7,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4200 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4220 DEFB $00,$F8,$7C,$3F,$C0,$7F,$78,$7F,$78,$0F,$00,$FF,$F0,$7F,$78,$00,$00,$3F,$C0,$FF,$FE,$FF,$FE,$3F,$C0,$0F,$F0,$78,$3C,$00,$1C,$00 ;
 $4240 DEFB $00,$FD,$F8,$7E,$78,$7F,$00,$7F,$00,$0E,$00,$60,$00,$7F,$00,$00,$00,$7E,$78,$03,$00,$03,$00,$7E,$78,$7C,$0C,$71,$F0,$00,$00,$00 ;
 $4260 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4280 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $42A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$05,$B0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $42C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$FF,$FF,$DF,$BE,$F9,$88,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $42E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$40,$F0,$03,$BA,$D9,$9F,$F9,$C3,$9F,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4300 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4320 DEFB $00,$F8,$3C,$3F,$F0,$3F,$F8,$3F,$F8,$1E,$00,$67,$F0,$3F,$F8,$00,$00,$3F,$F0,$7F,$F4,$7F,$F4,$3F,$F0,$7F,$F8,$F0,$70,$00,$18,$00 ;
 $4340 DEFB $00,$F0,$1C,$7A,$38,$3F,$C0,$3F,$C0,$1E,$00,$70,$00,$3F,$C0,$00,$00,$7A,$38,$03,$C0,$03,$C0,$7A,$38,$7F,$74,$61,$F0,$00,$04,$00 ;
 $4360 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4380 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $43A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$D0,$00,$00,$00,$7F,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $43C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$FF,$FF,$BF,$7D,$F6,$FE,$60,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $43E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$60,$00,$01,$79,$93,$FF,$F1,$C0,$3F,$C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4400 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4420 DEFB $00,$78,$3C,$7D,$F0,$38,$F8,$38,$F8,$0F,$00,$E0,$78,$38,$F8,$00,$00,$7D,$F0,$5B,$80,$5B,$80,$7D,$F0,$3E,$70,$70,$70,$00,$0C,$00 ;
 $4440 DEFB $00,$70,$3E,$18,$78,$77,$F8,$77,$F8,$0F,$00,$76,$80,$77,$F8,$00,$00,$18,$78,$03,$C0,$03,$C0,$18,$78,$7F,$F8,$71,$F8,$00,$3C,$00 ;
 $4460 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4480 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$30,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $44A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$EC,$00,$00,$03,$E9,$70,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $44C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$FB,$FF,$FF,$FD,$E7,$BC,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $44E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$60,$00,$02,$F7,$67,$FF,$91,$C3,$7F,$90,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4500 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4520 DEFB $00,$70,$38,$78,$E0,$70,$38,$70,$38,$0E,$00,$60,$00,$70,$38,$00,$00,$78,$E0,$03,$C0,$03,$C0,$78,$E0,$78,$30,$70,$F0,$00,$08,$00 ;
 $4540 DEFB $00,$70,$1C,$70,$38,$70,$F8,$70,$F8,$18,$00,$7F,$E0,$70,$F8,$00,$00,$70,$38,$01,$E0,$01,$E0,$70,$38,$1F,$F8,$30,$7C,$00,$18,$00 ;
 $4560 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4580 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$28,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $45A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$A6,$00,$00,$1F,$E8,$60,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $45C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$05,$F7,$FF,$80,$01,$CB,$98,$D0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $45E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$60,$00,$05,$EE,$83,$7F,$F0,$DB,$1F,$B8,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4600 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4620 DEFB $00,$7A,$FC,$F8,$78,$70,$F8,$70,$F8,$0E,$00,$60,$00,$70,$F8,$00,$00,$F8,$78,$01,$C0,$01,$C0,$F8,$78,$70,$00,$78,$C0,$00,$18,$00 ;
 $4640 DEFB $00,$E0,$18,$E0,$70,$78,$F0,$78,$F0,$7F,$00,$3F,$F0,$78,$F0,$00,$00,$E0,$70,$03,$80,$03,$80,$E0,$70,$07,$E0,$30,$30,$00,$1C,$00 ;
 $4660 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4680 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$16,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $46A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$88,$00,$00,$7F,$F3,$68,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $46C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$00,$05,$C8,$1B,$FF,$77,$7B,$F8,$30,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $46E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$60,$00,$0B,$F9,$43,$7F,$90,$ED,$FF,$BE,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4700 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4720 DEFB $00,$7F,$FC,$7B,$F8,$7B,$F0,$7B,$F0,$0C,$00,$6E,$00,$7B,$F0,$00,$00,$7B,$F8,$01,$E0,$01,$E0,$7B,$F8,$E0,$00,$F9,$80,$00,$10,$00 ;
 $4740 DEFB $00,$20,$08,$60,$78,$30,$70,$30,$70,$38,$00,$01,$C0,$30,$70,$00,$00,$60,$78,$00,$80,$00,$80,$60,$78,$02,$80,$70,$10,$00,$10,$00 ;
 $4760 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4780 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$07,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $47A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$88,$C0,$03,$FC,$0E,$8A,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $47C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$80,$0B,$97,$CA,$DE,$CB,$FC,$F3,$98,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $47E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$06,$70,$00,$17,$EE,$80,$3F,$F0,$6D,$FF,$BF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4800 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$06,$B0,$00,$5F,$DB,$F0,$0F,$90,$46,$FF,$BF,$C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4820 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0D,$E8,$00,$03,$FE,$C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4840 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$3F,$FF,$8E,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4860 DEFB $00,$00,$00,$00,$00,$00,$07,$FF,$0F,$FF,$FF,$FF,$FF,$1F,$F0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4880 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$7E,$73,$FE,$23,$83,$0F,$1F,$FE,$1E,$33,$C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $48A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$0B,$E0,$00,$3F,$FE,$0F,$77,$80,$7D,$86,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $48C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$FF,$33,$7F,$FB,$2C,$18,$C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $48E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$7F,$F7,$BF,$FF,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4900 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$06,$D0,$00,$7F,$BB,$F6,$07,$F8,$26,$FF,$80,$3F,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4920 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0A,$68,$00,$01,$FF,$40,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4940 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$F0,$73,$D0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4960 DEFB $00,$00,$00,$00,$00,$00,$00,$0F,$F0,$00,$0F,$FF,$FF,$E3,$8E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4980 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$7F,$01,$FF,$81,$DD,$F1,$FF,$FC,$E7,$27,$70,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $49A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$E0,$00,$0F,$F3,$87,$63,$00,$FE,$E8,$0A,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $49C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$3F,$99,$7F,$F3,$EF,$E7,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $49E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0F,$F7,$BF,$FF,$F8,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4A00 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$06,$E8,$01,$FE,$BB,$F6,$00,$3C,$27,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4A20 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0A,$34,$00,$00,$0E,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4A40 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$6F,$FF,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4A60 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$0F,$FF,$F0,$0F,$7F,$F8,$7F,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4A80 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$1F,$FC,$FF,$C1,$C3,$C1,$FF,$F9,$73,$AD,$BC,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4AA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$E0,$00,$03,$F8,$C3,$43,$01,$FE,$E0,$4E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4AC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$07,$CF,$3F,$F7,$DE,$FF,$F0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4AE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$F7,$BF,$FF,$F7,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4B00 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$06,$E8,$03,$FD,$87,$F6,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4B20 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$1A,$34,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4B40 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$78,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4B60 DEFB $00,$00,$00,$00,$00,$00,$00,$01,$80,$00,$0F,$F0,$3F,$FF,$0F,$FC,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4B80 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$0F,$FE,$3F,$B3,$E0,$41,$3F,$F3,$BF,$AD,$DE,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4BA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$FE,$23,$67,$03,$FF,$43,$6E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4BC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$E3,$BF,$F7,$BC,$FF,$F0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4BE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$37,$DF,$FF,$EF,$C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4C00 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$06,$E8,$07,$F6,$C1,$F6,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4C20 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$1A,$3A,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4C40 DEFB $00,$00,$00,$00,$00,$00,$7F,$7F,$F7,$FF,$FF,$FF,$1E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4C60 DEFB $00,$00,$00,$00,$00,$00,$00,$01,$E3,$E0,$F2,$0F,$C0,$00,$03,$FF,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4C80 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$03,$FF,$0F,$7B,$FC,$63,$3F,$F7,$F0,$65,$EF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4CA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$7F,$91,$7F,$07,$F7,$07,$23,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4CC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$19,$9F,$F7,$BC,$FF,$F8,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4CE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$1B,$DF,$FF,$EF,$C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4D00 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$06,$E8,$0D,$F9,$F0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4D20 DEFB $00,$00,$00,$00,$00,$00,$00,$01,$FF,$FF,$CB,$3A,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4D40 DEFB $00,$00,$00,$00,$00,$00,$77,$00,$00,$00,$00,$FF,$E7,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4D60 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$FB,$E3,$EE,$E0,$1F,$FF,$F8,$3F,$EC,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4D80 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$01,$FE,$86,$F9,$C3,$7F,$1F,$85,$E0,$37,$EF,$C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4DA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$1F,$FC,$7F,$2F,$EA,$9F,$F9,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4DC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$6F,$F7,$B9,$FF,$F8,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4DE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$EF,$FF,$DF,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4E00 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0D,$E8,$0B,$FB,$38,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4E20 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$FC,$00,$F0,$BD,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4E40 DEFB $00,$00,$00,$00,$00,$00,$3B,$FF,$FF,$FF,$FF,$FF,$FA,$78,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4E60 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$FB,$E7,$F1,$F3,$C0,$00,$03,$8C,$3F,$A0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4E80 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$FD,$C3,$7D,$F1,$FE,$1F,$3C,$C0,$1A,$30,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4EA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$07,$FE,$7F,$7F,$F5,$4F,$C4,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4EC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$93,$F7,$BF,$FF,$FC,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4EE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$07,$FF,$DF,$F0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4F00 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0D,$E8,$0F,$F3,$E2,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4F20 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$03,$FF,$FE,$7D,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4F40 DEFB $00,$00,$00,$00,$00,$00,$1D,$FF,$FF,$FF,$FF,$FF,$FC,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4F60 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$FC,$E7,$FD,$73,$FE,$00,$07,$E3,$C0,$9B,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4F80 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$FB,$E0,$BC,$7E,$FE,$1F,$7E,$C0,$1B,$D6,$F8,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4FA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$FF,$7F,$7F,$FB,$21,$CC,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4FC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$C3,$F7,$BF,$FF,$FE,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4FE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0F,$DF,$F8,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5000 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0F,$FC,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5020 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5040 DEFB $00,$00,$00,$00,$00,$3C,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5060 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5080 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $50A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $50C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $50E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5100 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5120 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5140 DEFB $00,$00,$00,$00,$00,$42,$00,$78,$00,$00,$00,$10,$10,$00,$3C,$00,$0C,$10,$00,$00,$00,$00,$00,$18,$3C,$3C,$3C,$00,$00,$00,$00,$00 ;
 $5160 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$7C,$00,$00,$42,$00,$3C,$00,$7C,$10,$00,$40,$00,$00,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5180 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $51A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$40,$3C,$3C,$78,$3E,$42,$3C,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $51C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $51E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5200 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5220 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5240 DEFB $00,$00,$00,$00,$00,$99,$00,$44,$44,$1C,$38,$10,$10,$00,$40,$38,$10,$38,$44,$38,$1C,$38,$00,$28,$42,$42,$42,$00,$00,$00,$00,$00 ;
 $5260 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$42,$44,$00,$66,$00,$42,$00,$42,$00,$1C,$40,$38,$1C,$04,$38,$38,$78,$00,$00,$00,$00,$00,$00,$00 ;
 $5280 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $52A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$40,$42,$42,$44,$08,$62,$42,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $52C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $52E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5300 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$60,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5320 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5340 DEFB $00,$00,$00,$00,$00,$A1,$00,$42,$44,$20,$44,$10,$10,$00,$3C,$44,$18,$10,$54,$04,$20,$44,$00,$08,$42,$3C,$0C,$00,$00,$00,$00,$00 ;
 $5360 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$7C,$44,$00,$5A,$00,$42,$00,$42,$30,$20,$78,$04,$20,$3C,$40,$44,$44,$00,$00,$00,$00,$00,$00,$00 ;
 $5380 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $53A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$40,$42,$42,$42,$08,$52,$40,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $53C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $53E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5400 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$10,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5420 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5440 DEFB $00,$00,$00,$00,$00,$A1,$00,$42,$44,$20,$78,$10,$10,$00,$02,$44,$10,$10,$54,$3C,$20,$78,$00,$08,$3E,$42,$02,$00,$00,$00,$00,$00 ;
 $5460 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$42,$44,$00,$42,$00,$7E,$00,$7C,$10,$20,$44,$3C,$20,$44,$38,$44,$44,$00,$00,$00,$00,$00,$00,$00 ;
 $5480 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $54A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$40,$42,$7E,$42,$08,$4A,$4E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $54C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $54E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5500 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5520 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5540 DEFB $00,$00,$00,$00,$00,$99,$00,$44,$44,$20,$40,$10,$10,$00,$42,$44,$10,$10,$54,$44,$20,$40,$00,$08,$02,$42,$42,$00,$00,$00,$00,$00 ;
 $5560 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$42,$3C,$00,$42,$18,$42,$18,$44,$10,$20,$44,$44,$20,$44,$04,$44,$44,$00,$00,$00,$00,$00,$00,$00 ;
 $5580 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $55A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$40,$42,$42,$44,$08,$46,$42,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $55C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $55E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5600 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5620 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5640 DEFB $00,$00,$00,$00,$00,$42,$00,$78,$38,$20,$3C,$0C,$0C,$00,$3C,$38,$10,$0C,$28,$3C,$20,$3C,$00,$3E,$3C,$3C,$3C,$00,$00,$00,$00,$00 ;
 $5660 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$7C,$04,$00,$42,$18,$42,$18,$42,$38,$1C,$44,$3C,$20,$3C,$78,$38,$44,$00,$00,$00,$00,$00,$00,$00 ;
 $5680 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $56A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$7E,$3C,$42,$78,$3E,$42,$3C,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $56C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $56E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5700 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5720 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5740 DEFB $00,$00,$00,$00,$00,$3C,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5760 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$38,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5780 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $57A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $57C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $57E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $5800 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ; {Attributes
 $5820 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $5840 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $5860 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $5880 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$05,$05,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $58A0 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$05,$05,$05,$05,$05,$05,$05,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $58C0 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$45,$45,$05,$05,$05,$05,$05,$05,$05,$05,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $58E0 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$45,$45,$05,$05,$05,$05,$05,$05,$05,$05,$05,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $5900 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$45,$45,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $5920 DEFB $42,$42,$42,$42,$42,$42,$42,$45,$45,$45,$45,$45,$45,$05,$05,$05,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $5940 DEFB $42,$42,$42,$42,$42,$42,$45,$45,$45,$45,$45,$45,$45,$45,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $5960 DEFB $42,$42,$42,$42,$42,$42,$45,$45,$45,$45,$45,$45,$45,$45,$45,$45,$45,$45,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $5980 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$45,$45,$45,$45,$45,$45,$45,$45,$45,$45,$45,$45,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $59A0 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$42,$45,$45,$45,$45,$45,$45,$45,$45,$45,$45,$45,$45,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $59C0 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$45,$45,$45,$45,$45,$45,$45,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $59E0 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$45,$45,$45,$45,$45,$45,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $5A00 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$45,$45,$45,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $5A20 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $5A40 DEFB $42,$42,$42,$42,$42,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$46,$42,$42,$42,$42,$42 ;
 $5A60 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$42,$42,$42,$42,$42,$42,$42 ;
 $5A80 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $5AA0 DEFB $42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42 ;
 $5AC0 DEFB $07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07 ;
 $5AE0 DEFB $07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07 ; }

; Data block at 5B00
b$5B00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B18 DEFB $00,$00,$00

; TODO
g$5B1B DEFB $00,$00,$00,$00,$00,$00,$00

; TODO
@label=E
g$5B22 DEFB $00,$00,$00,$00,$00

; TODO
@label=A
g$5B27 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B2F DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B37 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B3F DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B47 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B4F DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B57 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B5F DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B67 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B6F DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B77 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B7F DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B87 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B8F DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B97 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B9F DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BA7 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BAF DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BB7 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BBF DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BC7 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BCF DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BD7 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BDF DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BE7 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BEF DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BF7 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BFF DEFB $00,$00,$00,$00,$00,$00

; Skill level?
@label=B
g$5C05 DEFB $00,$00,$00

; TODO
@label=C
@label=D
g$5C08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C70 DEFB $00,$00,$00,$00,$00,$00,$00,$00

; TODO
g$5C78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C80 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C88 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C98 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CC8 DEFB $00,$00,$00,$00,$64,$97,$00,$FD
 $5CD0 DEFB $32,$34,$35,$37,$35,$0E,$00,$00
 $5CD8 DEFB $FF,$5F,$00,$3A,$D9,$30,$0E,$00
 $5CE0 DEFB $00,$00,$00,$00,$3A,$DA,$30,$0E
 $5CE8 DEFB $00,$00,$00,$00,$00,$3A,$E7,$30
 $5CF0 DEFB $0E,$00,$00,$00,$00,$00,$3A,$FB
 $5CF8 DEFB $3A,$F5,$AC,$32,$31,$0E,$00,$00
 $5D00 DEFB $15,$00,$00,$2C,$31,$32,$0E,$00
 $5D08 DEFB $00,$0C,$00,$00,$3B,$D9,$34,$0E
 $5D10 DEFB $00,$00,$04,$00,$00,$3B,$DB,$31
 $5D18 DEFB $0E,$00,$00,$01,$00,$00,$3B,$22
 $5D20 DEFB $4C,$4F,$41,$44,$49,$4E,$47,$22
 $5D28 DEFB $3B,$AC,$30,$0E,$00,$00,$00,$00
 $5D30 DEFB $00,$2C,$30,$0E,$00,$00,$00,$00
 $5D38 DEFB $00,$3B,$3A,$EF,$22,$22,$AF,$3A
 $5D40 DEFB $F5,$AC,$32,$0E,$00,$00,$02,$00
 $5D48 DEFB $00,$2C,$30,$0E,$00,$00,$00,$00
 $5D50 DEFB $00,$3B,$3A,$EF,$22,$22,$AF,$3A
 $5D58 DEFB $F9,$C0,$33,$30,$30,$33,$36,$0E
 $5D60 DEFB $00,$00,$54,$75,$00,$0D,$00,$00
 $5D68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D80 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D88 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D98 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DD8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E80 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E88 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E98 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5ED0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5ED8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F80 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F88 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F98 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FD8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00

; Routine at 6000
;
; Used by the routine at #R$7554.
c$6000 CALL $6007    ; Call #R$6007.
 $6003 CALL $6C77    ; Call #R$6C77.
 $6006 RET           ; Return.

; Routine at 6007
;
; Used by the routine at #R$6000.
@label=ENTRY
c$6007 LD HL,$581F   ; #REGhl=#N$581F.
 $600A LD DE,$001F   ; #REGde=#N($001F,$04,$04).
 $600D LD B,$0F      ; #REGb=#N$0F (counter).
@label=LOOP
*$600F LD A,(HL)     ;
 $6010 AND %00111000 ; Keep only bits 3-5 (PAPER).
 $6012 RRA           ; {Shift the PAPER bits to the "front".
 $6013 RRA           ;
 $6014 RRA           ; }
 $6015 LD C,A        ; Store the result in #REGc.
 $6016 LD A,(HL)     ;
 $6017 AND %11111000 ; Keep only bits 3-7 (PAPER, BRIGHT and FLASH bits).
 $6019 OR C          ; Set the bits from #REGc.
 $601A INC HL        ; Increment #REGhl by one.
 $601B LD (HL),A     ; Write #REGa to *#REGhl.
 $601C ADD HL,DE     ; #REGhl+=#REGde.
 $601D DJNZ $600F    ; Decrease counter by one and loop back to #R$600F until
                     ; counter is zero.
 $601F CALL $6E89    ; Call #R$6E89.
 $6022 LD A,($5B21)  ;
 $6025 BIT 3,A       ;
 $6027 CALL Z,$6DD0  ;
 $602A LD BC,$0100   ; {Copies #N$100 bytes of data from #N$5800
 $602D LD HL,$5801   ;
 $6030 LD DE,$5800   ;
 $6033 LDIR          ; }
 $6035 LD BC,$0800   ; {Copies #N$800 bytes of data from ...
 $6038 LD HL,$4001   ;
 $603B LD DE,$4000   ;
 $603E LDIR          ; }
 $6040 BIT 3,A       ;
 $6042 CALL Z,$6D09  ;
 $6045 LD A,($5B21)  ;
 $6048 BIT 3,A       ;
 $604A CALL NZ,$6DD0 ;

; Routine at 604D
c$604D LD BC,$00FF   ; {Copies the byte contained at #N$5900 to the following
 $6050 LD HL,$5901   ; #N$FF bytes.
 $6053 LD DE,$5900   ;
 $6056 LDIR          ; }
 $6058 LD BC,$07FF   ; {Copies the byte contained at #N$4800 to the following
 $605B LD HL,$4801   ; #N$7FF bytes.
 $605E LD DE,$4800   ;
 $6061 LDIR          ; }
 $6063 BIT 3,A       ; Check if D3 of #REGa is set?
 $6065 CALL NZ,$6D09 ;
 $6068 CALL $6E0E    ;
 $606B LD B,$10      ;
 $606D LD HL,$001F   ;
*$6070 PUSH BC       ;
 $6071 PUSH HL       ;
 $6072 XOR A         ;
 $6073 LD C,$2D      ;
 $6075 CALL $6114    ;
 $6078 POP HL        ;
 $6079 INC H         ;
 $607A POP BC        ;
 $607B DJNZ $6070    ;
 $607D LD BC,$001F   ;
 $6080 LD HL,$5001   ;
 $6083 LD DE,$5000   ;
 $6086 LDIR          ;
 $6088 CALL $60B6    ;
 $608B LD A,L        ;
 $608C LD ($65D0),A  ;
 $608F LD A,H        ;
 $6090 LD ($501F),A  ;
 $6093 CALL $6148    ;
 $6096 LD HL,($5B2C) ;
 $6099 INC HL        ;
 $609A LD ($5B2C),HL ;
 $609D CALL $61C4    ;
 $60A0 CALL $69A8    ;
 $60A3 CALL $6A24    ;
 $60A6 CALL $6ADA    ;
 $60A9 CALL $6F9E    ;
 $60AC CALL $6FD8    ;
 $60AF CALL $6FFD    ;
 $60B2 CALL $70A8    ;
 $60B5 RET           ;
; This entry point is used by the routine at #R$7162.
*$60B6 LD HL,($5B35) ;
 $60B9 LD D,H        ;
 $60BA LD E,L        ;
 $60BB ADD HL,HL     ;
 $60BC ADD HL,HL     ;
 $60BD ADD HL,HL     ;
 $60BE ADD HL,HL     ;
 $60BF PUSH HL       ;
 $60C0 ADD HL,HL     ;
 $60C1 EX (SP),HL    ;
 $60C2 OR A          ;
 $60C3 SBC HL,DE     ;
 $60C5 POP BC        ;
 $60C6 ADD HL,BC     ;
 $60C7 ADD HL,HL     ;
 $60C8 ADD HL,HL     ;
 $60C9 ADD HL,HL     ;
 $60CA ADD HL,DE     ;
 $60CB ADD HL,HL     ;
 $60CC ADD HL,HL     ;
 $60CD ADD HL,DE     ;
 $60CE LD DE,$0029   ;
 $60D1 ADD HL,DE     ;
 $60D2 LD ($5B35),HL ;
 $60D5 RET           ;

; Convert To Screen Buffer Address
;
; Used by the routines at #R$6114 and #R$739D.
;
; .
;
; On entry #REGhl is a number between #N($0000,$04,$04)-#N$F20 corresponding to
; the playarea.
@label=ScreenBufferAddress
c$60D6 PUSH AF       ; Stash #REGaf on the stack.
 $60D7 LD A,H        ; #REGa=#REGh.
 $60D8 RRA           ;
 $60D9 RRA           ;
 $60DA RRA           ;
 $60DB RRA           ;
 $60DC AND %11100000 ; Keep only bits 5-7.
 $60DE OR L          ; Set the bits from #REGl.
 $60DF LD C,A        ; #REGc=#REGa.
 $60E0 LD A,H        ; #REGa=#REGh.
 $60E1 AND %00011000 ; Keep only bits 3 and 4.
 $60E3 OR %01000000  ; {Set bit 6 of #REGb which converts #REGbc to a screen
 $60E5 LD B,A        ; address.}
 $60E6 POP AF        ; Retrieve #REGaf from the stack.
 $60E7 RET           ; Return.

; Fetch UDG Address
;
; Used by the routines at #R$6114 and #R$739D.
;
;   A UDG number
; O:DE The address of the UDG
@label=Address_UDG
c$60E8 PUSH HL       ; Stash #REGhl on the stack.
 $60E9 LD L,A        ; {Point #REGde at the graphic data for the corresponding
 $60EA LD H,$00      ; tile (at #R$6580(#N$6580)+#N$08*#REGa).
 $60EC ADD HL,HL     ;
 $60ED ADD HL,HL     ;
 $60EE ADD HL,HL     ;
 $60EF LD DE,$6580   ;
 $60F2 ADD HL,DE     ;
 $60F3 EX DE,HL      ; }
 $60F4 POP HL        ; Retrieve #REGhl from the stack.
 $60F5 RET           ; Return.

; Routine at 60F6
;
; Used by the routines at #R$6114, #R$69A8, #R$6BE7, #R$6D09, #R$6DD0, #R$6E89,
; #R$709D, #R$70CD, #R$7125 and #R$739D.
c$60F6 PUSH HL       ; Stash #REGhl on the stack.
 $60F7 LD A,L        ; #REGa=MSB of #REGhl.
 $60F8 LD L,H        ; {Moves the LSB to the MSB of #REGhl and writes #N$00 to
 $60F9 LD H,$00      ; the LSB.}
 $60FB ADD HL,HL     ; {#REGhl * #N$05.
 $60FC ADD HL,HL     ;
 $60FD ADD HL,HL     ;
 $60FE ADD HL,HL     ;
 $60FF ADD HL,HL     ; }
 $6100 OR L          ; {OR ... TODO and store the result in #REGl.
 $6101 LD L,A        ; }
 $6102 LD DE,$5800   ; #REGde=#N$5800
 $6105 ADD HL,DE     ; {Store the result in #REGde.
 $6106 EX DE,HL      ; }
 $6107 POP HL        ; Retrieve #REGhl from the stack.
 $6108 RET           ; Return.

; Draw UDG
;
; Used by the routine at #R$6114.
;
; .
;
; On entry #REGbc should point to a screen address and #REGde to the address of
; a #R$6580(UDG) tile.
@label=Draw_UDG
c$6109 LD L,C        ; {Copies #REGbc containing the screen address into
 $610A LD H,B        ; #REGhl.}
 $610B LD B,$08      ; {Draw the UDG graphic data to the screen.
@label=Draw_UDG_Loop
*$610D LD A,(DE)     ;
 $610E LD (HL),A     ;
 $610F INC H         ;
 $6110 INC DE        ;
 $6111 DJNZ $610D    ; }
 $6113 RET           ; Return.

; Routine at 6114
;
; Used by the routines at #R$604D, #R$612B, #R$6148, #R$69A8, #R$6BD0, #R$6BE7,
; #R$6D09, #R$6E0E, #R$6E89, #R$70F5, #R$7125, #R$739D and #R$7554.
;
; A UDG ID
c$6114 LD B,A        ; #REGb=#REGa.
 $6115 CALL $60F6    ; Call #R$60F6.
 $6118 LD A,(DE)     ; {Check if the current attribute byte is #N$2F?
 $6119 CP $2F        ; }
 $611B NOP           ; {No operation...
 $611C NOP           ; }
 $611D RET Z         ; Return if it is.
 $611E LD A,C        ; {Write #REGc to #REGde (attribute buffer).
 $611F LD (DE),A     ; }
 $6120 LD A,B        ; #REGa=#REGb.
 $6121 CALL $60D6    ; Call #R$60D6.
 $6124 CALL $60E8    ; Call #R$60E8.
 $6127 CALL $6109    ; Call #R$6109.
 $612A RET           ; Return.

; Routine at 612B
;
; Used by the routine at #R$7162.
@label=XXX
c$612B PUSH AF       ; Stash #REGaf on the stack for later.
 $612C PUSH BC       ; {Stash #REGbc, #REGhl and #REGde on the stack.
 $612D PUSH HL       ;
 $612E PUSH DE       ; }
 $612F CALL $6114    ; Call #R$6114.
 $6132 POP DE        ; {Retrieve #REGde, #REGhl and #REGbc from the stack.
 $6133 POP HL        ;
 $6134 POP BC        ; }
 $6135 INC L         ;
 $6136 LD A,L        ;
 $6137 AND %11100000 ; Keep only bits 5-7.
 $6139 JR Z,$613E    ;
 $613B XOR A         ;
 $613C LD L,A        ;
 $613D INC H         ;
@label=XXXX
*$613E DEC DE        ;
 $613F LD A,D        ;
 $6140 OR E          ;
 $6141 JR NZ,$6145   ;
 $6143 POP AF        ; Retrieve #REGaf from the stack.
 $6144 RET           ; Return.
; Else, loop back to the start.
@label=XXXXX
*$6145 POP AF        ; Retrieve #REGaf from the stack.
 $6146 JR $612B      ; Jump back to #R$612B.

; Routine at 6148
;
; Used by the routine at #R$604D.
c$6148 LD A,($5B37)  ;
 $614B OR A          ;
 $614C JR NZ,$616B   ;
 $614E LD A,($5B35)  ;
 $6151 AND $F0       ;
 $6153 RET NZ        ;
 $6154 LD A,($5B36)  ;
 $6157 LD DE,$6198   ;
 $615A BIT 3,A       ;
 $615C JR NZ,$6161   ;
 $615E LD DE,$61A8   ;
*$6161 LD ($5B38),DE ;
 $6165 AND $03       ;
 $6167 LD ($5B37),A  ;
 $616A RET           ;
*$616B LD H,A        ;
 $616C LD L,$1F      ;
 $616E LD DE,($5B38) ;
 $6172 LD A,(DE)     ;
 $6173 INC A         ;
 $6174 JR NZ,$617A   ;
 $6176 LD ($5B37),A  ;
 $6179 RET           ;
*$617A LD B,$03      ;
 $617C LD C,$2F      ;
 $617E CALL $6186    ;
 $6181 LD ($5B38),DE ;
 $6185 RET           ;
*$6186 PUSH BC       ;
 $6187 LD A,(DE)     ;
 $6188 OR A          ;
 $6189 JR Z,$6192    ;
 $618B PUSH DE       ;
 $618C PUSH HL       ;
 $618D CALL $6114    ;
 $6190 POP HL        ;
 $6191 POP DE        ;
*$6192 INC DE        ;
 $6193 INC H         ;
 $6194 POP BC        ;
 $6195 DJNZ $6186    ;
 $6197 RET           ;
 $6198 NOP           ;
 $6199 DEC BC        ;
 $619A LD C,$00      ;
 $619C INC C         ;
 $619D RRCA          ;
 $619E NOP           ;
 $619F DEC C         ;
 $61A0 DJNZ $61A2    ;
*$61A2 LD DE,$0013   ;
 $61A5 LD (DE),A     ;
 $61A6 INC D         ;
 $61A7 RST $38       ;
 $61A8 NOP           ;
 $61A9 DEC BC        ;
 $61AA LD C,$00      ;
 $61AC INC C         ;
 $61AD RRCA          ;
 $61AE NOP           ;
 $61AF DEC C         ;
 $61B0 DJNZ $61C7    ;
 $61B2 ADD HL,DE     ;
 $61B3 DEC DE        ;
 $61B4 LD D,$09      ;
 $61B6 INC E         ;
 $61B7 RLA           ;
 $61B8 ADD HL,BC     ;
 $61B9 DEC E         ;
 $61BA JR $61D6      ;
 $61BC LD E,$11      ;
 $61BE INC DE        ;
 $61BF NOP           ;
 $61C0 LD (DE),A     ;
 $61C1 INC D         ;
 $61C2 NOP           ;
 $61C3 RST $38       ;
; This entry point is used by the routine at #R$604D.
*$61C4 LD HL,($5B2C) ;
*$61C7 LD A,($5B00)  ;
 $61CA OR A          ;
 $61CB JR NZ,$61DE   ;
 $61CD LD DE,$0064   ;
 $61D0 SBC HL,DE     ;
 $61D2 RET C         ;
 $61D3 LD HL,$620D   ;
*$61D6 LD ($5B2A),HL ;
 $61D9 INC A         ;
 $61DA LD ($5B00),A  ;
 $61DD RET           ;
*$61DE DEC A         ;
 $61DF JR NZ,$6227   ;
*$61E1 LD DE,($5B2A) ;
 $61E5 LD A,(DE)     ;
 $61E6 INC A         ;
 $61E7 JR NZ,$61FE   ;
 $61E9 LD A,($5B00)  ;
 $61EC DEC A         ;
 $61ED RET NZ        ;
 $61EE LD HL,$0E1B   ;
 $61F1 LD ($5B1E),HL ;
 $61F4 LD A,$01      ;
 $61F6 LD ($5B1D),A  ;
 $61F9 INC A         ;
 $61FA LD ($5B00),A  ;
 $61FD RET           ;
*$61FE LD HL,$0D1F   ;
*$6201 LD B,$03      ;
 $6203 LD C,$2A      ;
 $6205 CALL $6186    ;
 $6208 LD ($5B2A),DE ;
 $620C RET           ;
 $620D NOP           ;
 $620E NOP           ;
 $620F LD A,($3800)  ;
 $6212 DEC SP        ;
 $6213 NOP           ;
 $6214 ADD HL,SP     ;
 $6215 INC A         ;
 $6216 NOP           ;
 $6217 NOP           ;
 $6218 DEC A         ;
 $6219 RST $38       ;
 $621A LD D,L        ;
 $621B LD D,(HL)     ;
 $621C LD D,A        ;
 $621D LD D,L        ;
 $621E LD D,(HL)     ;
 $621F LD D,A        ;
 $6220 LD D,L        ;
 $6221 LD D,(HL)     ;
 $6222 LD D,A        ;
 $6223 LD D,L        ;
 $6224 LD D,(HL)     ;
 $6225 LD D,A        ;
 $6226 RST $38       ;
*$6227 DEC A         ;
 $6228 JR NZ,$624B   ;
 $622A LD DE,$00C8   ;
 $622D SBC HL,DE     ;
 $622F RET C         ;
 $6230 LD HL,$0000   ;
 $6233 LD ($5B2C),HL ;
 $6236 LD A,$03      ;
 $6238 LD ($5B00),A  ;
 $623B LD A,$0F      ;
 $623D LD ($5B3A),A  ;
 $6240 LD HL,$0F1F   ;
 $6243 LD C,$2C      ;
 $6245 LD A,$01      ;
 $6247 CALL $6114    ;
 $624A RET           ;
*$624B DEC A         ;
 $624C JP NZ,$6329   ;
 $624F LD A,($5B36)  ;
 $6252 RRA           ;
 $6253 RRA           ;
 $6254 AND $03       ;
 $6256 LD ($5B41),A  ;
 $6259 JR NZ,$627C   ;
*$625B LD A,($5B3A)  ;
 $625E LD H,A        ;
 $625F LD A,$0A      ;
*$6261 LD L,$1F      ;
 $6263 PUSH HL       ;
 $6264 LD C,$2C      ;
 $6266 CALL $6114    ;
 $6269 POP HL        ;
 $626A LD A,$0F      ;
 $626C SUB H         ;
 $626D JR Z,$6279    ;
 $626F LD B,A        ;
 $6270 INC H         ;
 $6271 LD DE,$634F   ;
 $6274 LD C,$24      ;
 $6276 CALL $6186    ;
*$6279 JP $6306      ;
*$627C DEC A         ;
 $627D JR NZ,$6296   ;
*$627F LD A,R        ;
 $6281 RRA           ;
 $6282 AND $06       ;
 $6284 ADD A,$02     ;
 $6286 LD HL,($5B39) ;
 $6289 LD L,A        ;
 $628A LD A,H        ;
 $628B CP $0F        ;
 $628D JR Z,$625B    ;
 $628F INC A         ;
 $6290 LD ($5B3A),A  ;
 $6293 LD A,L        ;
 $6294 JR $6261      ;
*$6296 DEC A         ;
 $6297 JR NZ,$62B9   ;
 $6299 LD A,($5B36)  ;
 $629C RRA           ;
 $629D AND $06       ;
 $629F INC A         ;
 $62A0 LD HL,($5B39) ;
 $62A3 LD L,A        ;
 $62A4 LD A,($5B27)  ;
 $62A7 LD D,A        ;
 $62A8 LD A,$05      ;
 $62AA SUB D         ;
 $62AB ADD A,$07     ;
 $62AD CP H          ;
 $62AE LD A,H        ;
 $62AF JR Z,$625B    ;
 $62B1 DEC A         ;
 $62B2 DEC H         ;
 $62B3 LD ($5B3A),A  ;
 $62B6 LD A,L        ;
 $62B7 JR $6261      ;
*$62B9 LD A,($5B42)  ;
 $62BC AND $01       ;
 $62BE JR Z,$62C6    ;
 $62C0 XOR A         ;
 $62C1 LD ($5B41),A  ;
 $62C4 JR $625B      ;
*$62C6 LD A,$28      ;
 $62C8 LD C,A        ;
 $62C9 LD ($5B3D),A  ;
 $62CC LD A,R        ;
 $62CE RRA           ;
 $62CF AND $0C       ;
 $62D1 LD L,A        ;
 $62D2 RRA           ;
 $62D3 RRA           ;
 $62D4 LD ($5B28),A  ;
 $62D7 ADD A,L       ;
 $62D8 LD L,A        ;
 $62D9 CP $0F        ;
 $62DB JR NZ,$62E3   ;
 $62DD LD A,$28      ;
 $62DF LD C,A        ;
 $62E0 LD ($5B3D),A  ;
*$62E3 LD H,$00      ;
 $62E5 LD DE,$633B   ;
 $62E8 ADD HL,DE     ;
 $62E9 EX DE,HL      ;
 $62EA LD A,$04      ;
 $62EC LD ($5B00),A  ;
*$62EF LD HL,($5B39) ;
 $62F2 LD L,$1F      ;
 $62F4 PUSH HL       ;
 $62F5 DEC H         ;
 $62F6 DEC H         ;
 $62F7 LD B,$02      ;
 $62F9 CALL $6186    ;
 $62FC LD ($5B3B),DE ;
 $6300 POP HL        ;
 $6301 LD A,$09      ;
 $6303 JP $6261      ;
*$6306 LD A,($5B41)  ;
 $6309 LD ($5B42),A  ;
 $630C LD A,($5B27)  ;
 $630F LD L,$00      ;
 $6311 LD H,A        ;
 $6312 LD DE,$012C   ;
 $6315 ADD HL,DE     ;
 $6316 EX DE,HL      ;
 $6317 LD HL,($5B2C) ;
 $631A SBC HL,DE     ;
 $631C RET C         ;
 $631D LD A,$05      ;
 $631F LD ($5B00),A  ;
 $6322 LD HL,$0000   ;
 $6325 LD ($5B2C),HL ;
 $6328 RET           ;
*$6329 DEC A         ;
 $632A JR NZ,$6358   ;
 $632C LD DE,($5B3B) ;
 $6330 LD A,$03      ;
 $6332 LD ($5B00),A  ;
 $6335 LD A,($5B3D)  ;
 $6338 LD C,A        ;
 $6339 JR $62EF      ;
 $633B NOP           ;
 $633C INC HL        ;
 $633D NOP           ;
 $633E NOP           ;
 $633F RST $38       ;
 $6340 NOP           ;
 $6341 INC H         ;
 $6342 NOP           ;
 $6343 NOP           ;
 $6344 RST $38       ;
 $6345 NOP           ;
 $6346 DEC H         ;
 $6347 NOP           ;
 $6348 NOP           ;
 $6349 RST $38       ;
 $634A NOP           ;
 $634B LD B,L        ;
 $634C NOP           ;
 $634D LD B,(HL)     ;
 $634E RST $38       ;
 $634F ADD HL,BC     ;
 $6350 ADD HL,BC     ;
 $6351 ADD HL,BC     ;
 $6352 ADD HL,BC     ;
 $6353 ADD HL,BC     ;
 $6354 ADD HL,BC     ;
 $6355 ADD HL,BC     ;
 $6356 ADD HL,BC     ;
 $6357 ADD HL,BC     ;
*$6358 DEC A         ;
 $6359 JR NZ,$636C   ;
 $635B LD A,($5B3A)  ;
 $635E CP $0F        ;
 $6360 JP NZ,$627F   ;
 $6363 CALL $625B    ;
 $6366 LD A,$06      ;
 $6368 LD ($5B00),A  ;
 $636B RET           ;
*$636C DEC A         ;
 $636D JR NZ,$63A1   ;
 $636F LD HL,($5B2C) ;
 $6372 LD DE,$00C8   ;
 $6375 SBC HL,DE     ;
 $6377 JP NC,$646D   ;
 $637A LD A,R        ;
 $637C RRA           ;
 $637D RRA           ;
 $637E AND $07       ;
 $6380 ADD A,A       ;
 $6381 LD HL,$63D5   ;
 $6384 ADD A,L       ;
 $6385 LD L,A        ;
 $6386 JR NC,$6389   ;
 $6388 INC H         ;
*$6389 LD E,(HL)     ;
 $638A INC HL        ;
 $638B LD D,(HL)     ;
 $638C LD HL,$5B3D   ;
 $638F EX DE,HL      ;
 $6390 LD BC,$0004   ;
 $6393 LDIR          ;
 $6395 LD ($5B43),HL ;
 $6398 CALL $625B    ;
 $639B LD A,$07      ;
 $639D LD ($5B00),A  ;
 $63A0 RET           ;
*$63A1 DEC A         ;
 $63A2 JP NZ,$64E2   ;
 $63A5 LD HL,$5B3D   ;
 $63A8 PUSH HL       ;
 $63A9 LD B,$04      ;
 $63AB LD HL,$0C1F   ;
 $63AE LD DE,($5B43) ;
*$63B2 EX (SP),HL    ;
 $63B3 LD C,(HL)     ;
 $63B4 INC HL        ;
 $63B5 EX (SP),HL    ;
 $63B6 PUSH BC       ;
 $63B7 LD A,(DE)     ;
 $63B8 OR A          ;
 $63B9 JR Z,$63C2    ;
 $63BB PUSH DE       ;
 $63BC PUSH HL       ;
 $63BD CALL $6114    ;
 $63C0 POP HL        ;
 $63C1 POP DE        ;
*$63C2 INC DE        ;
 $63C3 INC H         ;
 $63C4 POP BC        ;
 $63C5 DJNZ $63B2    ;
 $63C7 LD A,(DE)     ;
 $63C8 POP HL        ;
 $63C9 LD ($5B43),DE ;
 $63CD INC A         ;
 $63CE RET NZ        ;
 $63CF LD A,$06      ;
 $63D1 LD ($5B00),A  ;
 $63D4 RET           ;
 $63D5 PUSH HL       ;
 $63D6 LD H,E        ;
 $63D7 JP M,$0363    ;
 $63DA LD H,H        ;
 $63DB DJNZ $6441    ;
 $63DD LD HL,$3264   ;
 $63E0 LD H,H        ;
 $63E1 DEC SP        ;
 $63E2 LD H,H        ;
 $63E3 LD D,B        ;
 $63E4 LD H,H        ;
 $63E5 JR Z,$6407    ;
 $63E7 JR NZ,$640D   ;
 $63E9 INC HL        ;
 $63EA LD B,B        ;
 $63EB LD B,B        ;
 $63EC ADD HL,BC     ;
 $63ED LD B,C        ;
 $63EE LD B,B        ;
 $63EF CCF           ;
 $63F0 ADD HL,BC     ;
 $63F1 LD B,D        ;
 $63F2 LD B,B        ;
 $63F3 LD B,B        ;
 $63F4 ADD HL,BC     ;
 $63F5 INC HL        ;
 $63F6 LD B,B        ;
 $63F7 LD B,B        ;
 $63F8 ADD HL,BC     ;
 $63F9 RST $38       ;
 $63FA NOP           ;
 $63FB NOP           ;
 $63FC LD ($0024),A  ;
 $63FF NOP           ;
 $6400 LD H,$09      ;
 $6402 RST $38       ;
 $6403 NOP           ;
 $6404 NOP           ;
 $6405 JR Z,$642B    ;
*$6407 NOP           ;
 $6408 NOP           ;
 $6409 DAA           ;
 $640A ADD HL,BC     ;
 $640B NOP           ;
 $640C NOP           ;
*$640D ADD HL,HL     ;
 $640E ADD HL,BC     ;
 $640F RST $38       ;
 $6410 JR Z,$6442    ;
 $6412 JR NC,$6438   ;
 $6414 INC H         ;
 $6415 LD B,B        ;
 $6416 LD B,B        ;
 $6417 ADD HL,BC     ;
 $6418 NOP           ;
 $6419 LD B,B        ;
 $641A CCF           ;
 $641B ADD HL,BC     ;
 $641C DEC H         ;
 $641D LD B,B        ;
 $641E LD B,B        ;
 $641F ADD HL,BC     ;
 $6420 RST $38       ;
 $6421 JR Z,$644B    ;
 $6423 JR Z,$6449    ;
 $6425 NOP           ;
 $6426 INC HL        ;
 $6427 LD D,L        ;
 $6428 ADD HL,BC     ;
 $6429 NOP           ;
 $642A NOP           ;
*$642B LD D,(HL)     ;
 $642C ADD HL,BC     ;
 $642D LD B,H        ;
 $642E LD D,H        ;
 $642F LD D,A        ;
 $6430 ADD HL,BC     ;
 $6431 RST $38       ;
 $6432 NOP           ;
 $6433 NOP           ;
 $6434 JR Z,$645A    ;
 $6436 NOP           ;
 $6437 NOP           ;
*$6438 LD D,E        ;
 $6439 ADD HL,BC     ;
 $643A RST $38       ;
 $643B NOP           ;
 $643C LD L,$1C      ;
 $643E INC H         ;
 $643F NOP           ;
 $6440 LD B,C        ;
*$6441 LD B,B        ;
*$6442 ADD HL,BC     ;
 $6443 NOP           ;
 $6444 LD B,E        ;
 $6445 CCF           ;
 $6446 ADD HL,BC     ;
 $6447 NOP           ;
 $6448 LD B,D        ;
*$6449 LD B,B        ;
 $644A ADD HL,BC     ;
*$644B NOP           ;
 $644C LD B,H        ;
 $644D CCF           ;
 $644E ADD HL,BC     ;
 $644F RST $38       ;
 $6450 JR Z,$64A2    ;
 $6452 LD D,B        ;
 $6453 INC H         ;
 $6454 LD B,H        ;
 $6455 LD B,B        ;
 $6456 LD B,B        ;
 $6457 ADD HL,BC     ;
 $6458 LD B,C        ;
 $6459 LD B,B        ;
*$645A LD B,B        ;
 $645B ADD HL,BC     ;
 $645C LD B,E        ;
 $645D LD B,B        ;
 $645E CCF           ;
 $645F ADD HL,BC     ;
 $6460 LD B,E        ;
 $6461 LD B,B        ;
 $6462 CCF           ;
 $6463 ADD HL,BC     ;
 $6464 LD B,D        ;
 $6465 LD B,B        ;
 $6466 LD B,B        ;
 $6467 ADD HL,BC     ;
 $6468 LD B,H        ;
 $6469 LD B,B        ;
 $646A LD B,B        ;
 $646B ADD HL,BC     ;
 $646C RST $38       ;
*$646D LD HL,$0F1F   ;
 $6470 LD C,$24      ;
 $6472 LD A,$09      ;
 $6474 CALL $6114    ;
 $6477 LD A,$08      ;
 $6479 LD ($5B00),A  ;
 $647C LD HL,$621A   ;
 $647F LD ($5B2A),HL ;
 $6482 RET           ;
*$6483 DEC A         ;
 $6484 JR NZ,$64A0   ;
 $6486 LD DE,$00FA   ;
 $6489 SBC HL,DE     ;
 $648B RET C         ;
 $648C LD A,($5B34)  ;
 $648F OR A          ;
 $6490 LD A,$0B      ;
 $6492 JR Z,$6496    ;
 $6494 LD A,$0E      ;
*$6496 LD ($5B00),A  ;
 $6499 LD HL,$64BD   ;
 $649C LD ($5B2A),HL ;
 $649F RET           ;
*$64A0 DEC A         ;
 $64A1 JR NZ,$64AF   ;
 $64A3 CALL $61E1    ;
 $64A6 LD A,(DE)     ;
 $64A7 INC A         ;
 $64A8 RET NZ        ;
 $64A9 LD A,$0C      ;
 $64AB LD ($5B00),A  ;
 $64AE RET           ;
*$64AF DEC A         ;
 $64B0 RET NZ        ;
 $64B1 LD DE,$010E   ;
 $64B4 SBC HL,DE     ;
 $64B6 RET C         ;
 $64B7 LD A,$0D      ;
 $64B9 LD ($5B00),A  ;
 $64BC RET           ;
 $64BD NOP           ;
 $64BE NOP           ;
 $64BF LD SP,$0000   ;
 $64C2 ADD HL,BC     ;
 $64C3 NOP           ;
 $64C4 NOP           ;
 $64C5 ADD HL,BC     ;
 $64C6 NOP           ;
 $64C7 NOP           ;
 $64C8 ADD HL,BC     ;
 $64C9 NOP           ;
 $64CA NOP           ;
 $64CB ADD HL,BC     ;
 $64CC NOP           ;
 $64CD INC SP        ;
 $64CE ADD HL,BC     ;
 $64CF LD (HL),$34   ;
 $64D1 ADD HL,BC     ;
 $64D2 SCF           ;
 $64D3 DEC (HL)      ;
 $64D4 ADD HL,BC     ;
 $64D5 NOP           ;
 $64D6 NOP           ;
 $64D7 ADD HL,BC     ;
 $64D8 NOP           ;
 $64D9 CPL           ;
 $64DA ADD HL,BC     ;
 $64DB NOP           ;
 $64DC JR NC,$64E7   ;
 $64DE NOP           ;
 $64DF NOP           ;
 $64E0 LD ($3DFF),A  ;
 $64E3 JR NZ,$6508   ;
 $64E5 LD DE,($5B2A) ;
 $64E9 LD A,(DE)     ;
 $64EA INC DE        ;
 $64EB LD ($5B2A),DE ;
 $64EF CP $FF        ;
 $64F1 JR Z,$64FC    ;
 $64F3 LD C,$28      ;
 $64F5 LD HL,$0F1F   ;
 $64F8 CALL $6114    ;
 $64FB RET           ;
*$64FC LD A,$09      ;
 $64FE LD ($5B00),A  ;
 $6501 LD HL,$620D   ;
 $6504 LD ($5B2A),HL ;
 $6507 RET           ;
*$6508 DEC A         ;
 $6509 JP NZ,$6483   ;
 $650C LD DE,($5B2A) ;
 $6510 LD A,(DE)     ;
 $6511 INC A         ;
 $6512 JR Z,$6523    ;
 $6514 LD HL,$0D1F   ;
 $6517 LD B,$03      ;
 $6519 LD C,$2A      ;
 $651B CALL $6186    ;
 $651E LD ($5B2A),DE ;
 $6522 RET           ;
*$6523 LD A,$0A      ;
 $6525 LD ($5B00),A  ;
 $6528 LD A,($5B1D)  ;
 $652B OR A          ;
 $652C RET NZ        ;
 $652D LD HL,$0E1B   ;
 $6530 LD ($5B1E),HL ;
 $6533 INC A         ;
 $6534 LD ($5B1D),A  ;
 $6537 RET           ;
*$6538 LD HL,$59FE   ;
 $653B LD DE,$59FF   ;
 $653E LD BC,$00FF   ;
 $6541 LDDR          ;
 $6543 LD HL,$4FFE   ;
 $6546 LD DE,$4FFF   ;
 $6549 LD BC,$07FF   ;
 $654C LDDR          ;
 $654E RET           ;
; This entry point is used by the routine at #R$7162.
*$654F DEC A         ;
 $6550 JR NZ,$656F   ;
 $6552 CALL $6538    ;
 $6555 LD DE,($5B2A) ;
 $6559 LD A,(DE)     ;
 $655A INC A         ;
 $655B JR NZ,$6568   ;
 $655D LD A,$02      ;
 $655F LD ($5B00),A  ;
 $6562 LD A,$06      ;
 $6564 LD ($5B3D),A  ;
 $6567 RET           ;
*$6568 LD HL,$0D00   ;
 $656B CALL $6201    ;
 $656E RET           ;
*$656F DEC A         ;
 $6570 JR NZ,$657F   ;
 $6572 CALL $6538    ;
 $6575 LD HL,$5B3D   ;
 $6578 DEC (HL)      ;
 $6579 RET NZ        ;
 $657A LD A,$03      ;
 $657C LD ($5B00),A  ;
*$657F RET           ;

; Game UDGs
@label=UDGs
b$6580 DEFB $00,$00,$00,$00,$00,$00,$00,$00 ; #UDG(#PC,attr=56)
 $6588 DEFB $03,$0F,$1F,$1F,$3F,$3F,$7F,$FF ; #UDG(#PC,attr=56)
 $6590 DEFB $C0,$F0,$F8,$F8,$FC,$FC,$FE,$FF ; #UDG(#PC,attr=56)
 $6598 DEFB $03,$03,$37,$3F,$7F,$7F,$FF,$FF ; #UDG(#PC,attr=56)
 $65A0 DEFB $C0,$C0,$EC,$FC,$FE,$FE,$FF,$FF ; #UDG(#PC,attr=56)
 $65A8 DEFB $00,$01,$03,$03,$07,$07,$0F,$7F ; #UDG(#PC,attr=56)
 $65B0 DEFB $00,$80,$C0,$C0,$E0,$E0,$F0,$FE ; #UDG(#PC,attr=56)
 $65B8 DEFB $02,$03,$07,$07,$0F,$0F,$1F,$7F ; #UDG(#PC,attr=56)
 $65C0 DEFB $40,$C0,$E0,$E0,$F0,$F0,$F8,$FE ; #UDG(#PC,attr=56)
 $65C8 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ; #UDG(#PC,attr=56)
 $65D0 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ; #UDG(#PC,attr=56)
 $65D8 DEFB $00,$70,$3F,$10,$02,$7F,$0F,$3F ; #UDG(#PC,attr=56)
 $65E0 DEFB $00,$F0,$FF,$8F,$07,$FF,$FF,$F8 ; #UDG(#PC,attr=56)
 $65E8 DEFB $00,$0C,$7F,$FF,$FF,$FF,$FF,$0F ; #UDG(#PC,attr=56)
 $65F0 DEFB $00,$0B,$1F,$00,$FF,$37,$03,$00 ; #UDG(#PC,attr=56)
 $65F8 DEFB $00,$CF,$FF,$FF,$FF,$F9,$20,$00 ; #UDG(#PC,attr=56)
 $6600 DEFB $3F,$FF,$E4,$F0,$C0,$00,$00,$00 ; #UDG(#PC,attr=56)
 $6608 DEFB $00,$80,$F0,$E0,$9B,$FF,$FF,$FF ; #UDG(#PC,attr=56)
 $6610 DEFB $00,$00,$1F,$FC,$F0,$E0,$FE,$FF ; #UDG(#PC,attr=56)
 $6618 DEFB $FF,$FE,$3F,$0F,$03,$07,$7F,$00 ; #UDG(#PC,attr=56)
 $6620 DEFB $F0,$00,$00,$00,$FC,$F0,$FE,$0C ; #UDG(#PC,attr=56)
 $6628 DEFB $00,$00,$03,$03,$0F,$01,$7F,$00 ; #UDG(#PC,attr=56)
 $6630 DEFB $00,$4F,$DF,$FF,$FF,$FF,$FF,$FF ; #UDG(#PC,attr=56)
 $6638 DEFB $00,$C1,$FB,$FF,$FF,$FF,$FF,$FF ; #UDG(#PC,attr=56)
 $6640 DEFB $60,$FC,$FF,$FF,$FF,$FF,$FF,$FF ; #UDG(#PC,attr=56)
 $6648 DEFB $03,$7F,$FF,$FF,$FF,$FF,$FF,$FF ; #UDG(#PC,attr=56)
 $6650 DEFB $FF,$FF,$F8,$C0,$00,$F8,$FC,$FE ; #UDG(#PC,attr=56)
 $6658 DEFB $FF,$FF,$0F,$3F,$FF,$1F,$1F,$00 ; #UDG(#PC,attr=56)
 $6660 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$D9,$00 ; #UDG(#PC,attr=56)
 $6668 DEFB $F0,$FF,$FF,$FF,$FF,$FC,$C0,$00 ; #UDG(#PC,attr=56)
 $6670 DEFB $00,$00,$C0,$FC,$00,$00,$00,$00 ; #UDG(#PC,attr=56)
 $6678 DEFB $04,$09,$31,$C2,$03,$04,$04,$08 ; #UDG(#PC,attr=56)
 $6680 DEFB $00,$00,$00,$00,$00,$00,$01,$03 ; #UDG(#PC,attr=56)
 $6688 DEFB $80,$40,$40,$20,$E0,$10,$10,$08 ; #UDG(#PC,attr=56)
 $6690 DEFB $20,$20,$40,$40,$80,$80,$00,$00 ; #UDG(#PC,attr=56)
 $6698 DEFB $04,$04,$04,$08,$18,$EC,$0A,$09 ; #UDG(#PC,attr=56)
 $66A0 DEFB $20,$10,$28,$44,$2B,$32,$20,$70 ; #UDG(#PC,attr=56)
 $66A8 DEFB $00,$80,$44,$28,$10,$38,$7C,$1C ; #UDG(#PC,attr=56)
 $66B0 DEFB $FF,$44,$4E,$44,$FF,$40,$40,$40 ; #UDG(#PC,attr=56)
 $66B8 DEFB $00,$00,$70,$50,$F0,$FF,$FF,$60 ; #UDG(#PC,attr=56)
 $66C0 DEFB $00,$00,$00,$00,$00,$00,$02,$01 ; #UDG(#PC,attr=56)
 $66C8 DEFB $00,$00,$00,$00,$00,$FF,$FF,$0C ; #UDG(#PC,attr=56)
 $66D0 DEFB $00,$00,$20,$10,$88,$48,$30,$20 ; #UDG(#PC,attr=56)
 $66D8 DEFB $FF,$FF,$30,$30,$30,$30,$30,$FF ; #UDG(#PC,attr=56)
 $66E0 DEFB $FF,$FF,$30,$36,$35,$36,$34,$34 ; #UDG(#PC,attr=56)
 $66E8 DEFB $FF,$FF,$51,$52,$52,$52,$51,$FF ; #UDG(#PC,attr=56)
 $66F0 DEFB $FF,$FF,$50,$50,$50,$50,$50,$50 ; #UDG(#PC,attr=56)
 $66F8 DEFB $00,$00,$40,$60,$7F,$1F,$24,$08 ; #UDG(#PC,attr=56)
 $6700 DEFB $00,$00,$00,$38,$FE,$D0,$10,$10 ; #UDG(#PC,attr=56)
 $6708 DEFB $00,$7F,$7F,$3F,$3F,$1F,$1F,$0F ; #UDG(#PC,attr=56)
 $6710 DEFB $FF,$FF,$FE,$FC,$F8,$F0,$E0,$C0 ; #UDG(#PC,attr=56)
 $6718 DEFB $00,$00,$0F,$0F,$0F,$FF,$EF,$FF ; #UDG(#PC,attr=56)
 $6720 DEFB $3F,$3F,$FF,$FF,$FF,$FF,$FF,$FF ; #UDG(#PC,attr=56)
 $6728 DEFB $D0,$F0,$F0,$F0,$F0,$FF,$FD,$FF ; #UDG(#PC,attr=56)
 $6730 DEFB $04,$04,$04,$24,$14,$3F,$3F,$3F ; #UDG(#PC,attr=56)
 $6738 DEFB $00,$00,$20,$40,$20,$F0,$D0,$F0 ; #UDG(#PC,attr=56)
 $6740 DEFB $00,$00,$00,$01,$01,$01,$01,$03 ; #UDG(#PC,attr=56)
 $6748 DEFB $00,$00,$00,$00,$00,$40,$40,$E0 ; #UDG(#PC,attr=56)
 $6750 DEFB $00,$20,$10,$07,$03,$FF,$7F,$3F ; #UDG(#PC,attr=56)
 $6758 DEFB $02,$03,$1F,$97,$9F,$FF,$FF,$FF ; #UDG(#PC,attr=56)
 $6760 DEFB $E0,$E0,$E0,$FC,$FC,$FF,$FF,$FF ; #UDG(#PC,attr=56)
 $6768 DEFB $00,$00,$00,$00,$00,$FF,$FF,$FE ; #UDG(#PC,attr=56)
 $6770 DEFB $00,$00,$00,$00,$40,$20,$D0,$C8 ; #UDG(#PC,attr=56)
 $6778 DEFB $00,$66,$66,$00,$00,$C6,$C6,$C0 ; #UDG(#PC,attr=56)
 $6780 DEFB $00,$66,$66,$00,$00,$66,$66,$00 ; #UDG(#PC,attr=56)
 $6788 DEFB $00,$00,$00,$00,$1F,$3F,$7F,$FF ; #UDG(#PC,attr=56)
 $6790 DEFB $00,$00,$00,$00,$F8,$FC,$FE,$FF ; #UDG(#PC,attr=56)
 $6798 DEFB $00,$00,$00,$00,$FF,$FF,$FF,$FF ; #UDG(#PC,attr=56)
 $67A0 DEFB $00,$00,$00,$00,$18,$3C,$7E,$FF ; #UDG(#PC,attr=56)
 $67A8 DEFB $00,$20,$18,$07,$03,$1F,$00,$0F ; #UDG(#PC,attr=56)
 $67B0 DEFB $00,$00,$00,$C0,$E0,$F8,$00,$F0 ; #UDG(#PC,attr=56)
 $67B8 DEFB $00,$3C,$46,$4A,$52,$62,$3C,$00 ; #UDG(#PC,attr=56)
 $67C0 DEFB $00,$0E,$3E,$FE,$7C,$38,$20,$00 ; #UDG(#PC,attr=56)
 $67C8 DEFB $08,$18,$3C,$7C,$3E,$1E,$0E,$00 ; #UDG(#PC,attr=56)
 $67D0 DEFB $00,$00,$0F,$3F,$7F,$3F,$03,$00 ; #UDG(#PC,attr=56)
 $67D8 DEFB $08,$16,$0D,$BD,$3D,$19,$1D,$00 ; #UDG(#PC,attr=56)
 $67E0 DEFB $40,$C0,$20,$10,$08,$04,$02,$01 ; #UDG(#PC,attr=56)
 $67E8 DEFB $44,$09,$1C,$39,$72,$61,$40,$84 ; #UDG(#PC,attr=56)
 $67F0 DEFB $80,$E0,$78,$7B,$7F,$3F,$32,$00 ; #UDG(#PC,attr=56)
 $67F8 DEFB $00,$00,$00,$00,$00,$20,$30,$10 ; #UDG(#PC,attr=56)
 $6800 DEFB $00,$0E,$1C,$3A,$72,$62,$5E,$01 ; #UDG(#PC,attr=56)
 $6808 DEFB $18,$3E,$FF,$81,$42,$34,$08,$08 ; #UDG(#PC,attr=56)
 $6810 DEFB $00,$70,$38,$5C,$4E,$46,$7A,$80 ; #UDG(#PC,attr=56)
 $6818 DEFB $00,$00,$00,$04,$04,$E7,$FF,$42 ; #UDG(#PC,attr=56)
 $6820 DEFB $FF,$99,$99,$FF,$FF,$99,$99,$9F ; #UDG(#PC,attr=56)
 $6828 DEFB $FF,$FF,$FF,$07,$0A,$12,$22,$42 ; #UDG(#PC,attr=56)
 $6830 DEFB $FF,$FF,$FF,$08,$88,$49,$2A,$1C ; #UDG(#PC,attr=56)
 $6838 DEFB $FF,$FF,$FF,$71,$A9,$25,$23,$21 ; #UDG(#PC,attr=56)
 $6840 DEFB $00,$01,$3F,$FF,$01,$00,$00,$00 ; #UDG(#PC,attr=56)
 $6848 DEFB $33,$F7,$FF,$FF,$FC,$7E,$0E,$00 ; #UDG(#PC,attr=56)
 $6850 DEFB $00,$00,$00,$10,$08,$04,$03,$02 ; #UDG(#PC,attr=56)
 $6858 DEFB $02,$03,$04,$08,$10,$00,$00,$00 ; #UDG(#PC,attr=56)
 $6860 DEFB $00,$00,$00,$01,$3E,$01,$00,$00 ; #UDG(#PC,attr=56)
 $6868 DEFB $00,$00,$00,$80,$7C,$80,$00,$00 ; #UDG(#PC,attr=56)
 $6870 DEFB $00,$00,$20,$00,$08,$04,$00,$00 ; #UDG(#PC,attr=56)
 $6878 DEFB $00,$00,$08,$00,$08,$08,$00,$00 ; #UDG(#PC,attr=56)
 $6880 DEFB $00,$10,$04,$10,$08,$20,$00,$00 ; #UDG(#PC,attr=56)
 $6888 DEFB $00,$00,$00,$08,$01,$0C,$00,$04 ; #UDG(#PC,attr=56)
 $6890 DEFB $10,$32,$74,$32,$13,$0B,$0A,$24 ; #UDG(#PC,attr=56)
 $6898 DEFB $40,$21,$42,$16,$36,$36,$26,$42 ; #UDG(#PC,attr=56)
 $68A0 DEFB $45,$41,$23,$33,$32,$A6,$7A,$B5 ; #UDG(#PC,attr=56)
 $68A8 DEFB $42,$24,$34,$36,$22,$89,$4A,$BC ; #UDG(#PC,attr=56)
 $68B0 DEFB $06,$47,$67,$7F,$3F,$27,$06,$00 ; #UDG(#PC,attr=56)
 $68B8 DEFB $00,$00,$F8,$FE,$E0,$00,$00,$00 ; #UDG(#PC,attr=56)
 $68C0 DEFB $FF,$11,$11,$01,$01,$11,$11,$FF ; #UDG(#PC,attr=56)
 $68C8 DEFB $FF,$88,$88,$80,$80,$88,$88,$FF ; #UDG(#PC,attr=56)
 $68D0 DEFB $FF,$10,$10,$00,$00,$10,$10,$FF ; #UDG(#PC,attr=56)
 $68D8 DEFB $FF,$08,$08,$00,$00,$08,$08,$FF ; #UDG(#PC,attr=56)

; Font
;
; Copied from the Spectrum ROM, see #R$716D.
; #FOR$00,$C7,,$04(n,#POKES(#PC+n,#PEEK($3E00+n)))
;
; .
;
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
@label=Font
b$68E0 DEFB %00000000 ; {#UDG(#PC)
 $68E1 DEFB %00000000 ;
 $68E2 DEFB %00000000 ;
 $68E3 DEFB %00000000 ;
 $68E4 DEFB %00000000 ;
 $68E5 DEFB %00000000 ;
 $68E6 DEFB %00000000 ;
 $68E7 DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $68E8 DEFB %00000000 ; {#UDG(#PC)
 $68E9 DEFB %00000000 ;
 $68EA DEFB %00000000 ;
 $68EB DEFB %00000000 ;
 $68EC DEFB %00000000 ;
 $68ED DEFB %00000000 ;
 $68EE DEFB %00000000 ;
 $68EF DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $68F0 DEFB %00000000 ; {#UDG(#PC)
 $68F1 DEFB %00000000 ;
 $68F2 DEFB %00000000 ;
 $68F3 DEFB %00000000 ;
 $68F4 DEFB %00000000 ;
 $68F5 DEFB %00000000 ;
 $68F6 DEFB %00000000 ;
 $68F7 DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $68F8 DEFB %00000000 ; {#UDG(#PC)
 $68F9 DEFB %00000000 ;
 $68FA DEFB %00000000 ;
 $68FB DEFB %00000000 ;
 $68FC DEFB %00000000 ;
 $68FD DEFB %00000000 ;
 $68FE DEFB %00000000 ;
 $68FF DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6900 DEFB %00000000 ; {#UDG(#PC)
 $6901 DEFB %00000000 ;
 $6902 DEFB %00000000 ;
 $6903 DEFB %00000000 ;
 $6904 DEFB %00000000 ;
 $6905 DEFB %00000000 ;
 $6906 DEFB %00000000 ;
 $6907 DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6908 DEFB %00000000 ; {#UDG(#PC)
 $6909 DEFB %00000000 ;
 $690A DEFB %00000000 ;
 $690B DEFB %00000000 ;
 $690C DEFB %00000000 ;
 $690D DEFB %00000000 ;
 $690E DEFB %00000000 ;
 $690F DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6910 DEFB %00000000 ; {#UDG(#PC)
 $6911 DEFB %00000000 ;
 $6912 DEFB %00000000 ;
 $6913 DEFB %00000000 ;
 $6914 DEFB %00000000 ;
 $6915 DEFB %00000000 ;
 $6916 DEFB %00000000 ;
 $6917 DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6918 DEFB %00000000 ; {#UDG(#PC)
 $6919 DEFB %00000000 ;
 $691A DEFB %00000000 ;
 $691B DEFB %00000000 ;
 $691C DEFB %00000000 ;
 $691D DEFB %00000000 ;
 $691E DEFB %00000000 ;
 $691F DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6920 DEFB %00000000 ; {#UDG(#PC)
 $6921 DEFB %00000000 ;
 $6922 DEFB %00000000 ;
 $6923 DEFB %00000000 ;
 $6924 DEFB %00000000 ;
 $6925 DEFB %00000000 ;
 $6926 DEFB %00000000 ;
 $6927 DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6928 DEFB %00000000 ; {#UDG(#PC)
 $6929 DEFB %00000000 ;
 $692A DEFB %00000000 ;
 $692B DEFB %00000000 ;
 $692C DEFB %00000000 ;
 $692D DEFB %00000000 ;
 $692E DEFB %00000000 ;
 $692F DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6930 DEFB %00000000 ; {#UDG(#PC)
 $6931 DEFB %00000000 ;
 $6932 DEFB %00000000 ;
 $6933 DEFB %00000000 ;
 $6934 DEFB %00000000 ;
 $6935 DEFB %00000000 ;
 $6936 DEFB %00000000 ;
 $6937 DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6938 DEFB %00000000 ; {#UDG(#PC)
 $6939 DEFB %00000000 ;
 $693A DEFB %00000000 ;
 $693B DEFB %00000000 ;
 $693C DEFB %00000000 ;
 $693D DEFB %00000000 ;
 $693E DEFB %00000000 ;
 $693F DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6940 DEFB %00000000 ; {#UDG(#PC)
 $6941 DEFB %00000000 ;
 $6942 DEFB %00000000 ;
 $6943 DEFB %00000000 ;
 $6944 DEFB %00000000 ;
 $6945 DEFB %00000000 ;
 $6946 DEFB %00000000 ;
 $6947 DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6948 DEFB %00000000 ; {#UDG(#PC)
 $6949 DEFB %00000000 ;
 $694A DEFB %00000000 ;
 $694B DEFB %00000000 ;
 $694C DEFB %00000000 ;
 $694D DEFB %00000000 ;
 $694E DEFB %00000000 ;
 $694F DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6950 DEFB %00000000 ; {#UDG(#PC)
 $6951 DEFB %00000000 ;
 $6952 DEFB %00000000 ;
 $6953 DEFB %00000000 ;
 $6954 DEFB %00000000 ;
 $6955 DEFB %00000000 ;
 $6956 DEFB %00000000 ;
 $6957 DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6958 DEFB %00000000 ; {#UDG(#PC)
 $6959 DEFB %00000000 ;
 $695A DEFB %00000000 ;
 $695B DEFB %00000000 ;
 $695C DEFB %00000000 ;
 $695D DEFB %00000000 ;
 $695E DEFB %00000000 ;
 $695F DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6960 DEFB %00000000 ; {#UDG(#PC)
 $6961 DEFB %00000000 ;
 $6962 DEFB %00000000 ;
 $6963 DEFB %00000000 ;
 $6964 DEFB %00000000 ;
 $6965 DEFB %00000000 ;
 $6966 DEFB %00000000 ;
 $6967 DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6968 DEFB %00000000 ; {#UDG(#PC)
 $6969 DEFB %00000000 ;
 $696A DEFB %00000000 ;
 $696B DEFB %00000000 ;
 $696C DEFB %00000000 ;
 $696D DEFB %00000000 ;
 $696E DEFB %00000000 ;
 $696F DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6970 DEFB %00000000 ; {#UDG(#PC)
 $6971 DEFB %00000000 ;
 $6972 DEFB %00000000 ;
 $6973 DEFB %00000000 ;
 $6974 DEFB %00000000 ;
 $6975 DEFB %00000000 ;
 $6976 DEFB %00000000 ;
 $6977 DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6978 DEFB %00000000 ; {#UDG(#PC)
 $6979 DEFB %00000000 ;
 $697A DEFB %00000000 ;
 $697B DEFB %00000000 ;
 $697C DEFB %00000000 ;
 $697D DEFB %00000000 ;
 $697E DEFB %00000000 ;
 $697F DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6980 DEFB %00000000 ; {#UDG(#PC)
 $6981 DEFB %00000000 ;
 $6982 DEFB %00000000 ;
 $6983 DEFB %00000000 ;
 $6984 DEFB %00000000 ;
 $6985 DEFB %00000000 ;
 $6986 DEFB %00000000 ;
 $6987 DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6988 DEFB %00000000 ; {#UDG(#PC)
 $6989 DEFB %00000000 ;
 $698A DEFB %00000000 ;
 $698B DEFB %00000000 ;
 $698C DEFB %00000000 ;
 $698D DEFB %00000000 ;
 $698E DEFB %00000000 ;
 $698F DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6990 DEFB %00000000 ; {#UDG(#PC)
 $6991 DEFB %00000000 ;
 $6992 DEFB %00000000 ;
 $6993 DEFB %00000000 ;
 $6994 DEFB %00000000 ;
 $6995 DEFB %00000000 ;
 $6996 DEFB %00000000 ;
 $6997 DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $6998 DEFB %00000000 ; {#UDG(#PC)
 $6999 DEFB %00000000 ;
 $699A DEFB %00000000 ;
 $699B DEFB %00000000 ;
 $699C DEFB %00000000 ;
 $699D DEFB %00000000 ;
 $699E DEFB %00000000 ;
 $699F DEFB %00000000 ; }
; #LET(id=#EVAL($40 + (#PC - $68E0) / $08))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:©)".
 $69A0 DEFB %00000000 ; {#UDG(#PC)
 $69A1 DEFB %00000000 ;
 $69A2 DEFB %00000000 ;
 $69A3 DEFB %00000000 ;
 $69A4 DEFB %00000000 ;
 $69A5 DEFB %00000000 ;
 $69A6 DEFB %00000000 ;
 $69A7 DEFB %00000000 ; }

; Routine at 69A8
;
; Used by the routine at #R$604D.
c$69A8 LD HL,$5B45   ;
 $69AB LD A,($5B28)  ;
 $69AE INC A         ;
 $69AF BIT 1,A       ;
 $69B1 JR Z,$69C2    ;
 $69B3 LD A,$04      ;
 $69B5 LD (HL),A     ;
 $69B6 LD ($5B28),A  ;
 $69B9 LD A,($5B3A)  ;
 $69BC DEC A         ;
 $69BD DEC A         ;
 $69BE DEC A         ;
 $69BF LD ($5B29),A  ;
*$69C2 LD A,(HL)     ;
 $69C3 OR A          ;
 $69C4 LD A,($5B00)  ;
 $69C7 JR NZ,$69D3   ;
*$69C9 CP $07        ;
 $69CB RET NZ        ;
 $69CC LD A,$0A      ;
 $69CE LD ($5B29),A  ;
 $69D1 JR $69D8      ;
*$69D3 CP $03        ;
 $69D5 JR NZ,$69C9   ;
 $69D7 DEC (HL)      ;
*$69D8 LD A,($5B36)  ;
 $69DB RLCA          ;
 $69DC RLCA          ;
 $69DD RLCA          ;
 $69DE RLCA          ;
 $69DF AND $0F       ;
 $69E1 LD H,A        ;
 $69E2 LD A,($5B29)  ;
 $69E5 CP H          ;
 $69E6 RET C         ;
 $69E7 LD L,$1A      ;
 $69E9 CALL $60F6    ;
 $69EC LD A,(DE)     ;
 $69ED CP $2D        ;
 $69EF RET NZ        ;
 $69F0 LD B,$60      ;
 $69F2 LD A,R        ;
 $69F4 BIT 0,A       ;
 $69F6 JR Z,$69F9    ;
 $69F8 INC B         ;
*$69F9 LD A,B        ;
 $69FA LD C,$2B      ;
 $69FC CALL $6114    ;
 $69FF LD HL,$6A1C   ;
 $6A02 LD C,$02      ;
 $6A04 XOR A         ;
*$6A05 LD B,(HL)     ;
 $6A06 INC HL        ;
*$6A07 PUSH HL       ;
 $6A08 POP HL        ;
 $6A09 DJNZ $6A07    ;
 $6A0B SET 4,A       ;
 $6A0D OUT ($FE),A   ;
 $6A0F LD B,(HL)     ;
*$6A10 PUSH HL       ;
 $6A11 POP HL        ;
 $6A12 DJNZ $6A10    ;
 $6A14 RES 4,A       ;
 $6A16 OUT ($FE),A   ;
 $6A18 DEC C         ;
 $6A19 JR NZ,$6A05   ;
 $6A1B RET           ;

; Data block at 6A1C
b$6A1C DEFB $01,$C8,$24,$7A,$12,$0C,$CB,$9B
*$6A24 DEFB $3A,$1D,$5B,$B7,$C8,$3D,$20,$0E
 $6A2C DEFB $CD,$51,$6A,$0E,$29,$CD,$14,$61
 $6A34 DEFB $3E,$02,$32,$1D,$5B,$C9,$CD,$46
 $6A3C DEFB $6A,$CD,$51,$6A,$0E,$29,$CD,$14
 $6A44 DEFB $61,$C9,$2A,$1E,$5B,$2D,$AF,$0E
 $6A4C DEFB $2D,$CD,$14,$61,$C9,$2A,$1E,$5B
 $6A54 DEFB $2D,$28,$4B,$2D,$28,$48,$3A,$22
 $6A5C DEFB $5B,$B7,$20,$42,$ED,$5B,$20,$5B
 $6A64 DEFB $7D,$93,$06,$5C,$38,$18,$FE,$05
 $6A6C DEFB $38,$14,$7A,$BC,$28,$06,$38,$03
 $6A74 DEFB $24,$18,$01,$25,$BC,$28,$07,$38
 $6A7C DEFB $03,$05,$18,$02,$06,$5A,$22,$1E
 $6A84 DEFB $5B,$D5,$CD,$F6,$60,$1A,$D1,$4F
 $6A8C DEFB $3E,$5C,$B8,$20,$1B,$79,$FE,$28
 $6A94 DEFB $20,$16,$7B,$BD,$20,$0E,$CD,$D0
 $6A9C DEFB $6D,$3E,$01,$32,$22,$5B,$AF,$32
 $6AA4 DEFB $1D,$5B,$E1,$C9,$3C,$BD,$28,$EE
 $6AAC DEFB $79,$FE,$2D,$28,$11,$FE,$2F,$28
 $6AB4 DEFB $0D,$FE,$2B,$28,$09,$FE,$29,$28
 $6ABC DEFB $08,$CD,$5E,$6C,$18,$E0,$78,$B7
 $6AC4 DEFB $C9,$ED,$4B,$02,$5B,$B7,$ED,$42
 $6ACC DEFB $20,$06,$AF,$32,$01,$5B,$18,$EE
 $6AD4 DEFB $AF,$32,$33,$5B,$18,$E8,$3A,$23
 $6ADC DEFB $5B,$B7,$20,$3E,$3A,$00,$5B,$FE
 $6AE4 DEFB $02,$D8,$FE,$08,$D0,$3A,$1D,$5B
 $6AEC DEFB $B7,$C0,$3A,$22,$5B,$B7,$C0,$2A
 $6AF4 DEFB $20,$5B,$3A,$27,$5B,$4F,$3E,$0B
 $6AFC DEFB $91,$4F,$7C,$B9,$D0,$ED,$5F,$E6
 $6B04 DEFB $0F,$C0,$3A,$35,$5B,$E6,$03,$67
 $6B0C DEFB $2E,$1E,$22,$24,$5B,$3E,$58,$0E
 $6B14 DEFB $2A,$CD,$C1,$6B,$3E,$01,$32,$23
 $6B1C DEFB $5B,$C9,$3D,$20,$4C,$2A,$24,$5B
 $6B24 DEFB $2D,$22,$24,$5B,$ED,$5B,$20,$5B
 $6B2C DEFB $7D,$93,$FE,$0A,$30,$0E,$3E,$01
 $6B34 DEFB $32,$1D,$5B,$3C,$32,$23,$5B,$2D
 $6B3C DEFB $22,$1E,$5B,$C9,$7C,$BA,$C8,$38
 $6B44 DEFB $03,$25,$18,$01,$24,$CD,$F6,$60
 $6B4C DEFB $1A,$13,$FE,$2D,$28,$03,$FE,$2F
 $6B54 DEFB $C0,$1A,$FE,$2D,$28,$03,$FE,$2F
 $6B5C DEFB $C0,$E5,$CD,$AE,$6B,$E1,$22,$24
 $6B64 DEFB $5B,$3E,$58,$0E,$2A,$CD,$C1,$6B
 $6B6C DEFB $C9,$3D,$20,$1B,$2A,$24,$5B,$2D
 $6B74 DEFB $28,$10,$22,$24,$5B,$CB,$45,$C8
 $6B7C DEFB $25,$24,$28,$03,$25,$18,$C6,$CD
 $6B84 DEFB $AE,$6B,$AF,$32,$23,$5B,$C9,$3D
 $6B8C DEFB $20,$14,$3E,$04,$32,$23,$5B,$2A
 $6B94 DEFB $24,$5B,$2D,$22,$24,$5B,$3E,$4D
 $6B9C DEFB $0E,$2B,$CD,$C1,$6B,$C9,$2A,$24
 $6BA4 DEFB $5B,$2D,$CD,$B1,$6B,$AF,$32,$23
 $6BAC DEFB $5B,$C9,$2A,$24,$5B,$0E,$2D,$AF
 $6BB4 DEFB $E5,$CD,$14,$61,$E1,$AF,$0E,$2D
 $6BBC DEFB $2C,$CD,$14,$61,$C9,$E5,$F5,$C5
 $6BC4 DEFB $CD,$14,$61,$C1,$F1,$E1,$2C,$3C
 $6BCC DEFB $CD,$14,$61,$C9

; Process UDG Data
;
; Used by the routines at #R$7162 and #R$72BF.
;
; B Length of UDG data
; C Colour attribute
; DE UDG data address
; HL Screen buffer address
@label=Process_UDG_Data
c$6BD0 LD A,(DE)     ; Fetch UDG data reference.
 $6BD1 INC DE        ; Increment UDG data reference address pointer held in
                     ; #REGde by one.
 $6BD2 PUSH DE       ; {Stash #REGde, #REGhl and #REGbc on the stack.
 $6BD3 PUSH HL       ;
 $6BD4 PUSH BC       ; }
 $6BD5 CALL $6114    ; Call #R$6114.
 $6BD8 POP BC        ; {Restore #REGbc and #REGhl from the stack.
 $6BD9 POP HL        ; }
 $6BDA INC L         ; Increment #REGl by one.
 $6BDB LD A,L        ; #REGa=#REGl.
 $6BDC AND %11100000 ; Keep only bits 5-7.
 $6BDE JR Z,$6BE3    ; If the result is zero, jump to #R$6BE3.
 $6BE0 XOR A         ; {#REGl=#N$00.
 $6BE1 LD L,A        ; }
 $6BE2 INC H         ; Increment #REGh by one.
@label=Process_UDG_Data_Skip
*$6BE3 POP DE        ; Restore #REGde from the stack.
 $6BE4 DJNZ $6BD0    ; Decrease counter by one and loop back to #R$6BD0 until
                     ; counter is zero.
 $6BE6 RET           ; Return.

; Routine at 6BE7
;
; Used by the routines at #R$6E0E, #R$6F9E and #R$6FD8.
c$6BE7 DI              ;
 $6BE8 PUSH IX         ;
 $6BEA PUSH HL         ;
 $6BEB POP IX          ;
 $6BED DEC (IX+$00)    ;
 $6BF0 JR NZ,$6C00     ;
 $6BF2 LD A,(IX+$03)   ;
 $6BF5 LD (IX+$00),A   ;
 $6BF8 DEC (IX+$01)    ;
 $6BFB JR NZ,$6C04     ;
 $6BFD INC (IX+$01)    ;
*$6C00 POP IX          ;
 $6C02 EI              ;
 $6C03 RET             ;
*$6C04 LD A,(IX+$02)   ;
 $6C07 ADD A,(IX+$01)  ;
 $6C0A LD HL,$5AB0     ;
 $6C0D ADD A,L         ;
 $6C0E LD L,A          ;
 $6C0F LD C,$20        ;
 $6C11 LD A,(IX+$01)   ;
 $6C14 CP $03          ;
 $6C16 JR NC,$6C33     ;
 $6C18 LD C,$50        ;
 $6C1A PUSH HL         ;
 $6C1B LD DE,$001F     ;
 $6C1E SRL A           ;
 $6C20 SRL A           ;
 $6C22 SBC HL,DE       ;
 $6C24 LD B,$0E        ;
*$6C26 LD A,(HL)       ;
 $6C27 XOR (IX+$04)    ;
 $6C2A LD (HL),A       ;
 $6C2B INC HL          ;
 $6C2C DJNZ $6C26      ;
 $6C2E LD (IX+$04),$80 ;
 $6C32 POP HL          ;
*$6C33 LD (HL),C       ;
 $6C34 INC HL          ;
 $6C35 LD (HL),$30     ;
 $6C37 JR $6C00        ;
; This entry point is used by the routine at #R$6C77.
*$6C39 LD B,A          ;
 $6C3A LD A,($5B26)    ;
 $6C3D ADD A,B         ;
 $6C3E INC A           ;
 $6C3F JR NZ,$6C45     ;
 $6C41 LD ($5B26),A    ;
 $6C44 RET             ;
*$6C45 DEC A           ;
 $6C46 CP $10          ;
 $6C48 RET NC          ;
 $6C49 LD ($5B26),A    ;
 $6C4C LD HL,$5AA0     ;
 $6C4F ADD A,L         ;
 $6C50 LD L,A          ;
 $6C51 LD (HL),$50     ;
 $6C53 LD A,B          ;
 $6C54 DEC A           ;
 $6C55 JR NZ,$6C5A     ;
 $6C57 DEC HL          ;
 $6C58 JR $6C5B        ;
*$6C5A INC HL          ;
*$6C5B LD (HL),$30     ;
 $6C5D RET             ;
; This entry point is used by the routines at #R$6E89 and #R$6EF0.
*$6C5E PUSH HL         ;
 $6C5F LD A,$64        ;
 $6C61 LD C,$2B        ;
 $6C63 CALL $6114      ;
 $6C66 POP HL          ;
 $6C67 DEC H           ;
 $6C68 CALL $60F6      ;
 $6C6B LD A,(DE)       ;
 $6C6C CP $2D          ;
 $6C6E RET NZ          ;
 $6C6F LD A,$62        ;
 $6C71 LD C,$2B        ;
 $6C73 CALL $6114      ;
 $6C76 RET             ;

; Routine at 6C77
;
; Used by the routine at #R$6000.
c$6C77 LD A,($5B34)  ;
 $6C7A OR A          ;
 $6C7B JR NZ,$6C84   ;
 $6C7D LD A,($5B00)  ;
 $6C80 CP $0B        ;
 $6C82 JR NC,$6CAA   ;
*$6C84 LD A,($5B22)  ;
 $6C87 OR A          ;
 $6C88 JR NZ,$6CAF   ;
 $6C8A LD A,($5B06)  ;
 $6C8D CP $02        ;
 $6C8F JR NC,$6CAF   ;
 $6C91 LD BC,$F7FE   ;
 $6C94 IN D,(C)      ;
 $6C96 LD BC,$EFFE   ;
 $6C99 IN A,(C)      ;
 $6C9B ADD A,A       ;
 $6C9C ADD A,A       ;
 $6C9D XOR D         ;
 $6C9E AND $10       ;
 $6CA0 JR Z,$6CAF    ;
 $6CA2 BIT 4,D       ;
 $6CA4 JR Z,$6CAA    ;
 $6CA6 LD A,$01      ;
 $6CA8 JR $6CAC      ;
*$6CAA LD A,$FF      ;
*$6CAC CALL $6C39    ;
*$6CAF LD A,($5B27)  ;
 $6CB2 LD B,A        ;
 $6CB3 LD A,$05      ;
 $6CB5 SUB B         ;
 $6CB6 RRCA          ;
 $6CB7 RRCA          ;
 $6CB8 RRCA          ;
 $6CB9 INC A         ;
 $6CBA LD B,A        ;
 $6CBB SRL A         ;
 $6CBD SRL A         ;
 $6CBF ADD A,$04     ;
 $6CC1 LD C,A        ;
 $6CC2 LD A,($5B22)  ;
 $6CC5 INC A         ;
 $6CC6 BIT 1,A       ;
 $6CC8 JR Z,$6CCF    ;
 $6CCA CALL $6F47    ;
 $6CCD JR $6CD6      ;
*$6CCF PUSH BC       ;
 $6CD0 CALL $6CFE    ;
 $6CD3 POP BC        ;
 $6CD4 DJNZ $6CCF    ;
*$6CD6 LD A,($5B26)  ;
 $6CD9 LD B,A        ;
 $6CDA LD A,$0F      ;
 $6CDC SUB B         ;
 $6CDD RRCA          ;
 $6CDE RRCA          ;
 $6CDF RRCA          ;
 $6CE0 RRCA          ;
 $6CE1 INC A         ;
 $6CE2 LD B,A        ;
 $6CE3 SRL A         ;
 $6CE5 SRL A         ;
 $6CE7 ADD A,$04     ;
 $6CE9 LD C,A        ;
 $6CEA LD A,($5B22)  ;
 $6CED INC A         ;
 $6CEE BIT 1,A       ;
 $6CF0 JR Z,$6CF6    ;
 $6CF2 CALL $6F47    ;
 $6CF5 RET           ;

; Routine at 6CF6
;
; Used by the routine at #R$6C77.
c$6CF6 PUSH BC       ;
 $6CF7 CALL $6CFE    ;
 $6CFA POP BC        ; Grab the counter off the stack.
 $6CFB DJNZ $6CF6    ; Decrease counter by one and loop back to #R$6CF6 until
                     ; counter is zero.
 $6CFD RET           ; Return.
; This entry point is used by the routine at #R$6C77.
*$6CFE LD BC,$0032   ; {Copies #N$32 bytes of data from ...
 $6D01 LD HL,$0000   ;
 $6D04 PUSH HL       ;
 $6D05 POP DE        ;
 $6D06 LDIR          ; }
 $6D08 RET           ;

; Routine at 6D09
;
; Used by the routines at #R$6007 and #R$604D.
c$6D09 LD A,($5B22)  ;
 $6D0C OR A          ;
 $6D0D JP NZ,$6D72   ;
 $6D10 LD HL,($5B20) ;
 $6D13 PUSH HL       ;
 $6D14 LD A,($5B0B)  ;
 $6D17 CP $01        ;
 $6D19 JR Z,$6D38    ;
 $6D1B LD A,($5B06)  ;
 $6D1E CP $02        ;
 $6D20 JR NC,$6D38   ;
 $6D22 LD BC,$EFFE   ;
 $6D25 IN A,(C)      ;
 $6D27 LD B,A        ;
 $6D28 RRCA          ;
 $6D29 XOR B         ;
 $6D2A AND $08       ;
 $6D2C JR Z,$6D40    ;
 $6D2E BIT 3,B       ;
 $6D30 JR NZ,$6D3F   ;
 $6D32 DEC H         ;
 $6D33 JR NZ,$6D40   ;
 $6D35 INC H         ;
 $6D36 JR $6D40      ;
*$6D38 LD A,($5B2C)  ;
 $6D3B BIT 0,A       ;
 $6D3D JR Z,$6D40    ;
*$6D3F INC H         ;
*$6D40 LD A,($5B26)  ;
 $6D43 SRL A         ;
 $6D45 SRL A         ;
 $6D47 ADD A,$08     ;
 $6D49 LD L,A        ;
 $6D4A CALL $60F6    ;
 $6D4D LD ($5B20),HL ;
 $6D50 EX (SP),HL    ;
 $6D51 PUSH DE       ;
 $6D52 POP HL        ;
 $6D53 LD A,(HL)     ;
 $6D54 PUSH HL       ;
 $6D55 CALL $6DB4    ;
 $6D58 POP HL        ;
 $6D59 INC HL        ;
 $6D5A LD A,(HL)     ;
 $6D5B PUSH HL       ;
 $6D5C CALL $6DB4    ;
 $6D5F POP HL        ;
 $6D60 LD A,$66      ;
 $6D62 LD C,$28      ;
 $6D64 POP HL        ;
 $6D65 PUSH HL       ;
 $6D66 CALL $6114    ;
 $6D69 POP HL        ;
 $6D6A INC L         ;
 $6D6B LD A,$67      ;
 $6D6D LD C,$28      ;
 $6D6F CALL $6114    ;
*$6D72 LD A,($5B01)  ;
 $6D75 OR A          ;
 $6D76 RET Z         ;
 $6D77 LD HL,$5B04   ;
 $6D7A INC (HL)      ;
 $6D7B LD A,$0A      ;
 $6D7D CP (HL)       ;
 $6D7E JR NZ,$6D85   ;
 $6D80 XOR A         ;
 $6D81 LD ($5B01),A  ;
 $6D84 RET           ;
*$6D85 LD A,(HL)     ;
 $6D86 LD HL,($5B20) ;
 $6D89 ADD A,L       ;
 $6D8A LD L,A        ;
 $6D8B LD ($5B02),HL ;
 $6D8E LD C,$5D      ;
 $6D90 PUSH HL       ;
 $6D91 DEC L         ;
 $6D92 CALL $6E98    ;
 $6D95 JR NZ,$6D9C   ;
 $6D97 LD ($5B01),A  ;
 $6D9A POP HL        ;
 $6D9B RET           ;
*$6D9C POP HL        ;
 $6D9D DEC L         ;
 $6D9E CALL $60F6    ;
 $6DA1 LD A,(DE)     ;
 $6DA2 CP $2F        ;
 $6DA4 JR Z,$6DA9    ;
 $6DA6 LD A,$2D      ;
 $6DA8 LD (DE),A     ;
*$6DA9 INC L         ;
 $6DAA LD C,$5D      ;
 $6DAC CALL $6E98    ;
 $6DAF RET NZ        ;
 $6DB0 LD ($5B01),A  ;
 $6DB3 RET           ;

; Routine at 6DB4
;
; Used by the routine at #R$6D09.
c$6DB4 CP $2D        ;
 $6DB6 RET Z         ;
 $6DB7 CP $2F        ;
 $6DB9 RET Z         ;
 $6DBA CP $2B        ;
 $6DBC JR NZ,$6DC7   ;
 $6DBE LD HL,$5B2E   ;
 $6DC1 INC (HL)      ;
 $6DC2 LD A,($5B2F)  ;
 $6DC5 CP (HL)       ;
 $6DC6 RET NZ        ;
*$6DC7 LD A,$01      ;
 $6DC9 LD ($5B22),A  ;
 $6DCC POP HL        ;
 $6DCD POP HL        ;
 $6DCE POP HL        ;
 $6DCF RET           ;

; Routine at 6DD0
;
; Used by the routines at #R$6007, #R$6EF0, #R$6FFD and #R$7078.
c$6DD0 LD HL,$5C78   ;
 $6DD3 LD A,(HL)     ;
*$6DD4 CP (HL)       ;
 $6DD5 JR Z,$6DD4    ;
 $6DD7 LD HL,$0000   ;
 $6DDA PUSH HL       ;
 $6DDB POP DE        ;
 $6DDC LD BC,$0001   ;
 $6DDF LDIR          ;
 $6DE1 LD A,($5B22)  ;
 $6DE4 OR A          ;
 $6DE5 JR NZ,$6DF6   ;
 $6DE7 LD HL,($5B20) ;
 $6DEA CALL $709D    ;
 $6DED INC DE        ;
 $6DEE LD A,(DE)     ;
 $6DEF CP $28        ;
 $6DF1 JR NZ,$6DF6   ;
 $6DF3 LD A,$2D      ;
 $6DF5 LD (DE),A     ;
*$6DF6 LD A,($5B01)  ;
 $6DF9 OR A          ;
 $6DFA JR Z,$6E0A    ;
 $6DFC LD HL,($5B02) ;
 $6DFF CALL $60F6    ;
 $6E02 LD A,(DE)     ;
 $6E03 CP $2F        ;
 $6E05 JR Z,$6E0A    ;
 $6E07 LD A,$2D      ;
 $6E09 LD (DE),A     ;
*$6E0A LD A,($5B21)  ;
 $6E0D RET           ;

; Routine at 6E0E
;
; Used by the routine at #R$604D.
c$6E0E LD A,($5B33)  ;
 $6E11 OR A          ;
 $6E12 JR NZ,$6E49   ;
 $6E14 LD A,($5B22)  ;
 $6E17 OR A          ;
 $6E18 RET NZ        ;
 $6E19 INC A         ;
 $6E1A LD HL,$5B15   ;
 $6E1D CP (HL)       ;
 $6E1E RET Z         ;
 $6E1F LD A,($5B34)  ;
 $6E22 OR A          ;
 $6E23 JR NZ,$6E2B   ;
 $6E25 LD A,($5B00)  ;
 $6E28 CP $0B        ;
 $6E2A RET NC        ;
*$6E2B LD BC,$EFFE   ;
 $6E2E IN A,(C)      ;
 $6E30 BIT 1,A       ;
 $6E32 RET NZ        ;
 $6E33 DEC HL        ;
 $6E34 CALL $6BE7    ;
 $6E37 LD A,$01      ;
 $6E39 LD ($5B33),A  ;
 $6E3C LD HL,($5B20) ;
 $6E3F LD ($5B31),HL ;
 $6E42 LD A,$03      ;
 $6E44 LD ($5B30),A  ;
 $6E47 JR $6E57      ;
*$6E49 DEC A         ;
 $6E4A JR NZ,$6E68   ;
 $6E4C LD HL,$5B30   ;
 $6E4F DEC (HL)      ;
 $6E50 JR NZ,$6E57   ;
 $6E52 LD A,$02      ;
 $6E54 LD ($5B33),A  ;
*$6E57 LD HL,($5B31) ;
 $6E5A INC H         ;
 $6E5B LD C,$5E      ;
 $6E5D LD ($5B31),HL ;
 $6E60 CALL $6E98    ;
 $6E63 RET NZ        ;
 $6E64 LD ($5B33),A  ;
 $6E67 RET           ;
*$6E68 LD HL,($5B31) ;
 $6E6B DEC L         ;
 $6E6C JR NZ,$6E73   ;
 $6E6E XOR A         ;
 $6E6F LD ($5B33),A  ;
 $6E72 RET           ;
*$6E73 PUSH HL       ;
 $6E74 XOR A         ;
 $6E75 LD C,$2D      ;
 $6E77 CALL $6114    ;
 $6E7A POP HL        ;
 $6E7B INC H         ;
 $6E7C LD C,$5F      ;
 $6E7E LD ($5B31),HL ;
 $6E81 CALL $6E98    ;
 $6E84 RET NZ        ;
 $6E85 LD ($5B33),A  ;
 $6E88 RET           ;

; Routine at 6E89
;
; Used by the routine at #R$6007.
c$6E89 LD A,($5B33)  ;
 $6E8C DEC A         ;
 $6E8D RET NZ        ;
 $6E8E XOR A         ;
 $6E8F LD C,$2D      ;
 $6E91 LD HL,($5B31) ;
 $6E94 CALL $6114    ;
 $6E97 RET           ;
; This entry point is used by the routines at #R$6D09 and #R$6E0E.
*$6E98 PUSH HL       ;
 $6E99 CALL $60F6    ;
 $6E9C LD A,(DE)     ;
 $6E9D CP $2D        ;
 $6E9F JR Z,$6EE5    ;
 $6EA1 CP $2F        ;
 $6EA3 JR Z,$6EE5    ;
 $6EA5 CP $2B        ;
 $6EA7 JR Z,$6EF8    ;
 $6EA9 CP $29        ;
 $6EAB JP Z,$6F39    ;
 $6EAE CP $2C        ;
 $6EB0 JR Z,$6EF8    ;
 $6EB2 CP $79        ;
 $6EB4 JR Z,$6EF8    ;
 $6EB6 CP $24        ;
 $6EB8 JR Z,$6EF8    ;
 $6EBA CP $2A        ;
 $6EBC JR Z,$6EFB    ;
 $6EBE LD DE,($5B20) ;
 $6EC2 POP HL        ;
 $6EC3 PUSH HL       ;
 $6EC4 OR A          ;
 $6EC5 SBC HL,DE     ;
 $6EC7 JR Z,$6EF0    ;
 $6EC9 POP HL        ;
 $6ECA PUSH HL       ;
 $6ECB INC E         ;
 $6ECC OR A          ;
 $6ECD SBC HL,DE     ;
 $6ECF JR Z,$6EF0    ;
 $6ED1 POP HL        ;
 $6ED2 LD A,($5B00)  ;
 $6ED5 CP $05        ;
 $6ED7 LD A,$23      ;
 $6ED9 JR NC,$6EDD   ;
 $6EDB LD A,$0A      ;
*$6EDD CALL $6F63    ;
 $6EE0 CALL $6C5E    ;
; This entry point is used by the routine at #R$6EF0.
*$6EE3 XOR A         ;
 $6EE4 RET           ;
*$6EE5 POP HL        ;
 $6EE6 LD A,C        ;
 $6EE7 LD C,$29      ;
 $6EE9 CALL $6114    ;
 $6EEC LD A,$01      ;
 $6EEE OR A          ;
 $6EEF RET           ;

; Routine at 6EF0
;
; Used by the routine at #R$6E89.
c$6EF0 CALL $6DD0    ;
 $6EF3 LD A,$01      ;
 $6EF5 LD ($5B22),A  ;
; This entry point is used by the routine at #R$6E89.
*$6EF8 POP HL        ;
 $6EF9 JR $6EE3      ;
; This entry point is used by the routine at #R$6E89.
*$6EFB POP HL        ;
 $6EFC PUSH HL       ;
 $6EFD LD DE,($5B24) ;
 $6F01 OR A          ;
 $6F02 SBC HL,DE     ;
 $6F04 JR Z,$6F2C    ;
 $6F06 POP HL        ;
 $6F07 PUSH HL       ;
 $6F08 DEC E         ;
 $6F09 OR A          ;
 $6F0A SBC HL,DE     ;
 $6F0C JR Z,$6F2C    ;
 $6F0E POP HL        ;
 $6F0F LD A,($5B00)  ;
 $6F12 OR A          ;
 $6F13 JR NZ,$6F22   ;
 $6F15 INC A         ;
 $6F16 LD ($5B34),A  ;
 $6F19 XOR A         ;
 $6F1A CALL $6F63    ;
 $6F1D CALL $6C5E    ;
 $6F20 JR $6EE3      ;
*$6F22 LD A,$32      ;
 $6F24 CALL $6F63    ;
 $6F27 CALL $6C5E    ;
 $6F2A JR $6EE3      ;
*$6F2C LD A,$03      ;
 $6F2E LD ($5B23),A  ;
 $6F31 LD A,$4B      ;
 $6F33 CALL $6F63    ;
 $6F36 POP HL        ;
 $6F37 JR $6EE3      ;
; This entry point is used by the routine at #R$6E89.
*$6F39 XOR A         ;
 $6F3A LD ($5B1D),A  ;
 $6F3D LD A,$2D      ;
 $6F3F LD (DE),A     ;
 $6F40 LD A,$01      ;
 $6F42 CALL $6F63    ;
 $6F45 JR $6EF8      ;

; Crash Sound/ Border Flash
;
; Used by the routines at #R$6C77, #R$6F63, #R$72CA, #R$7533 and #R$78B0.
;
; C Duration counter
@label=Sounds_Crash
c$6F47 LD HL,$6A1C   ; Point to #R$6A1C.
 $6F4A XOR A         ; #REGa=#N$00.
@label=Sounds_Crash_Loop
*$6F4B LD B,(HL)     ; #REGb=Fetch the sound data byte.
 $6F4C INC HL        ; Move onto the next sound data byte.
@label=
 $6F4D DJNZ $6F4D    ; Decrease counter by one and loop back to #R$6F4D until
                     ; counter is zero.
 $6F4F SET 4,A       ; {Turn the speaker on (set bit 4) and set the border
 $6F51 OUT ($FE),A   ; colour.}
 $6F53 LD B,(HL)     ; #REGb=Fetch the sound data byte.
 $6F54 INC HL        ; Move onto the next sound data byte.
@label=
 $6F55 DJNZ $6F55    ; Decrease counter by one and loop back to #R$6F55 until
                     ; counter is zero.
 $6F57 RES 4,A       ; {Turn the speaker off (reset bit 4) and set the border
 $6F59 OUT ($FE),A   ; colour.}
 $6F5B INC A         ; Increment #REGa by one.
 $6F5C DEC C         ; Decrease #REGc by one.
 $6F5D JR NZ,$6F4B   ; Jump back to #R$6F4B until #REGc is zero.
 $6F5F XOR A         ; #REGa=#N$00.
 $6F60 OUT ($FE),A   ; Border colour.
 $6F62 RET           ; Return.

; Routine at 6F63
;
; Used by the routines at #R$6E89, #R$6EF0 and #R$6FFD.
c$6F63 PUSH HL       ;
 $6F64 PUSH AF       ;
 $6F65 LD C,$28      ;
 $6F67 CALL $6F47    ;
 $6F6A POP AF        ;
 $6F6B OR A          ;
 $6F6C JR NZ,$6F70   ;
 $6F6E POP HL        ;
 $6F6F RET           ;
*$6F70 LD HL,($5B1B) ;
 $6F73 ADD A,L       ;
 $6F74 JR NC,$6F77   ;
 $6F76 INC H         ;
*$6F77 LD L,A        ;
 $6F78 LD ($5B1B),HL ;
 $6F7B LD A,$02      ;
 $6F7D CALL $1601    ;
 $6F80 LD BC,$061A   ;
 $6F83 CALL $0DD9    ;
 $6F86 LD A,$07      ;
 $6F88 LD ($5C8F),A  ;
 $6F8B LD BC,($5B1B) ;
 $6F8F CALL $1A1B    ;
 $6F92 LD A,$30      ;
 $6F94 RST $10       ;
 $6F95 LD HL,($5B49) ;
 $6F98 INC HL        ;
 $6F99 LD ($5B49),HL ;
 $6F9C POP HL        ;
 $6F9D RET           ;

; Routine at 6F9E
;
; Used by the routine at #R$604D.
c$6F9E LD A,($5B01)  ;
 $6FA1 OR A          ;
 $6FA2 RET NZ        ;
 $6FA3 LD A,($5B10)  ;
 $6FA6 CP $01        ;
 $6FA8 RET Z         ;
 $6FA9 LD A,($5B22)  ;
 $6FAC OR A          ;
 $6FAD RET NZ        ;
 $6FAE LD A,($5B34)  ;
 $6FB1 OR A          ;
 $6FB2 JR NZ,$6FBA   ;
 $6FB4 LD A,($5B00)  ;
 $6FB7 CP $0B        ;
 $6FB9 RET NC        ;
*$6FBA LD BC,$EFFE   ;
 $6FBD IN A,(C)      ;
 $6FBF BIT 0,A       ;
 $6FC1 RET NZ        ;
 $6FC2 LD A,$02      ;
 $6FC4 LD ($5B04),A  ;
 $6FC7 LD ($5B01),A  ;
 $6FCA LD HL,$5B0F   ;
 $6FCD CALL $6BE7    ;
 $6FD0 LD HL,($5B20) ;
 $6FD3 INC L         ;
 $6FD4 LD ($5B02),HL ;
 $6FD7 RET           ;

; Routine at 6FD8
;
; Used by the routines at #R$604D and #R$739D.
c$6FD8 LD A,($5B05)  ;
 $6FDB LD B,A        ;
 $6FDC LD A,($5C78)  ;
 $6FDF LD ($5B05),A  ;
 $6FE2 LD C,A        ;
 $6FE3 SUB B         ;
 $6FE4 LD D,A        ;
 $6FE5 AND $03       ;
 $6FE7 ADD A,C       ;
 $6FE8 LD ($5C78),A  ;
 $6FEB LD A,D        ;
 $6FEC SRL A         ;
 $6FEE SRL A         ;
 $6FF0 RET Z         ;
 $6FF1 LD B,A        ;
*$6FF2 PUSH BC       ;
 $6FF3 LD HL,$5B0A   ;
 $6FF6 CALL $6BE7    ;
 $6FF9 POP BC        ;
 $6FFA DJNZ $6FF2    ;
 $6FFC RET           ;

; Routine at 6FFD
;
; Used by the routine at #R$604D.
c$6FFD LD A,($5B22)  ;
 $7000 OR A          ;
 $7001 RET NZ        ;
 $7002 LD A,($5B23)  ;
 $7005 OR A          ;
 $7006 JR Z,$7078    ;
 $7008 CP $03        ;
 $700A JR Z,$7078    ;
 $700C LD A,($5B33)  ;
 $700F OR A          ;
 $7010 JR Z,$7031    ;
 $7012 LD HL,($5B31) ;
 $7015 LD DE,($5B24) ;
 $7019 CALL $7094    ;
 $701C JR NZ,$7031   ;
 $701E CALL $709D    ;
 $7021 LD A,$03      ;
 $7023 LD ($5B23),A  ;
 $7026 XOR A         ;
 $7027 LD ($5B33),A  ;
 $702A LD A,$4B      ;
 $702C CALL $6F63    ;
 $702F JR $7056      ;
*$7031 LD A,($5B01)  ;
 $7034 OR A          ;
 $7035 JR Z,$7056    ;
 $7037 LD HL,($5B02) ;
 $703A LD DE,($5B24) ;
 $703E CALL $7094    ;
 $7041 JR NZ,$7056   ;
 $7043 CALL $709D    ;
 $7046 LD A,$03      ;
 $7048 LD ($5B23),A  ;
 $704B XOR A         ;
 $704C LD ($5B01),A  ;
 $704F LD A,$4B      ;
 $7051 CALL $6F63    ;
 $7054 JR $7078      ;
*$7056 LD HL,($5B24) ;
 $7059 LD DE,($5B20) ;
 $705D LD A,D        ;
 $705E CP H          ;
 $705F JR NZ,$7078   ;
 $7061 LD A,E        ;
 $7062 INC A         ;
 $7063 SUB L         ;
 $7064 JR C,$7078    ;
 $7066 CP $03        ;
 $7068 JR NC,$7078   ;
 $706A CALL $6DD0    ;
 $706D LD A,$03      ;
 $706F LD ($5B23),A  ;
 $7072 LD A,$01      ;
 $7074 LD ($5B22),A  ;
 $7077 RET           ;

; Routine at 7078
;
; Used by the routine at #R$6FFD.
c$7078 LD A,($5B1D)  ;
 $707B OR A          ;
 $707C RET Z         ;
 $707D LD HL,($5B1E) ;
 $7080 LD DE,($5B20) ;
 $7084 CALL $7094    ;
 $7087 RET NZ        ;
 $7088 CALL $6DD0    ;
 $708B XOR A         ;
 $708C LD ($5B1D),A  ;
 $708F INC A         ;
 $7090 LD ($5B22),A  ;
 $7093 RET           ;

; Routine at 7094
;
; Used by the routines at #R$6FFD and #R$7078.
c$7094 LD A,H        ;
 $7095 CP D          ;
 $7096 RET NZ        ;
 $7097 LD A,L        ;
 $7098 CP E          ;
 $7099 RET Z         ;
 $709A DEC A         ;
 $709B CP E          ;
 $709C RET           ;

; Routine at 709D
;
; Used by the routines at #R$6DD0, #R$6FFD, #R$70CD and #R$710E.
c$709D CALL $60F6    ;
 $70A0 LD A,(DE)     ;
 $70A1 CP $2F        ;
 $70A3 RET Z         ;
 $70A4 LD A,$2D      ;
 $70A6 LD (DE),A     ;
 $70A7 RET           ;

; Routine at 70A8
;
; Used by the routines at #R$604D, #R$739D and #R$7554.
c$70A8 LD A,($5B06)  ;
 $70AB OR A          ;
 $70AC JR NZ,$70CD   ;
 $70AE LD A,($5B22)  ;
 $70B1 OR A          ;
 $70B2 RET NZ        ;
 $70B3 LD BC,$7FFE   ;
 $70B6 IN A,(C)      ;
 $70B8 BIT 0,A       ;
 $70BA RET NZ        ;
 $70BB LD A,$01      ;
 $70BD LD ($5B06),A  ;
 $70C0 LD HL,($5B20) ;
 $70C3 DEC H         ;
 $70C4 LD ($5B07),HL ;
 $70C7 LD A,$4F      ;
 $70C9 LD ($5B09),A  ;
 $70CC RET           ;

; Routine at 70CD
;
; Used by the routine at #R$70A8.
c$70CD DEC A         ;
 $70CE JR NZ,$710E   ;
 $70D0 LD HL,($5B07) ;
 $70D3 LD A,($5B00)  ;
 $70D6 CP $0D        ;
 $70D8 CALL Z,$709D  ;
 $70DB DEC L         ;
 $70DC LD ($5B07),HL ;
 $70DF CALL $60F6    ;
 $70E2 LD A,(DE)     ;
 $70E3 CP $2F        ;
 $70E5 JR Z,$70F5    ;
 $70E7 CP $2D        ;
 $70E9 JR Z,$70F5    ;
 $70EB CP $28        ;
 $70ED JR Z,$70F5    ;
 $70EF LD A,$03      ;
 $70F1 LD ($5B06),A  ;
 $70F4 RET           ;

; Routine at 70F5
;
; Used by the routine at #R$70CD.
c$70F5 LD HL,$5B09   ;
 $70F8 LD A,(HL)     ;
 $70F9 INC (HL)      ;
 $70FA CP $52        ;
 $70FC JR NZ,$7105   ;
 $70FE LD A,$02      ;
 $7100 LD ($5B06),A  ;
 $7103 LD A,$52      ;
*$7105 LD C,$28      ;
 $7107 LD HL,($5B07) ;
 $710A CALL $6114    ;
 $710D RET           ;

; Routine at 710E
;
; Used by the routine at #R$70CD.
c$710E DEC A         ;
 $710F RET NZ        ;
 $7110 LD HL,($5B07) ;
 $7113 DEC L         ;
 $7114 INC L         ;
 $7115 JR NZ,$7125   ;
 $7117 LD A,$04      ;
 $7119 LD ($5B06),A  ;
 $711C LD A,($5B00)  ;
 $711F CP $0D        ;
 $7121 CALL Z,$709D  ;
 $7124 RET           ;

; Routine at 7125
;
; Used by the routine at #R$710E.
c$7125 LD A,($5B00)  ;
 $7128 CP $0D        ;
 $712A JR Z,$712D    ;
 $712C DEC L         ;
*$712D PUSH HL       ;
 $712E XOR A         ;
 $712F LD C,$2D      ;
 $7131 CALL $6114    ;
 $7134 POP HL        ;
 $7135 INC H         ;
 $7136 LD A,($5B00)  ;
 $7139 CP $0D        ;
 $713B JR NZ,$713E   ;
 $713D DEC L         ;
*$713E LD ($5B07),HL ;
 $7141 CALL $60F6    ;
 $7144 LD A,(DE)     ;
 $7145 CP $2D        ;
 $7147 JR Z,$7159    ;
 $7149 CP $2F        ;
 $714B JR Z,$7159    ;
 $714D CP $2B        ;
 $714F LD A,$03      ;
 $7151 JR Z,$7155    ;
 $7153 LD A,$04      ;
*$7155 LD ($5B06),A  ;
 $7158 RET           ;
*$7159 LD A,$51      ;
 $715B LD C,$28      ;
 $715D CALL $6114    ;
 $7160 RET           ;
 $7161 NOP           ;

; Routine at 7162
;
; Used by the routine at #R$7554.
c$7162 LD A,($5B00)    ; #REGa=#R$5B00.
 $7165 OR A            ;
 $7166 JP NZ,$654F     ;
 $7169 LD A,$00        ; {Set the border to #COLOUR$00.
 $716B OUT ($FE),A     ; }
 $716D LD HL,$3E00     ; {#HTML(Copy #N$00C8 bytes of data from <a
 $7170 LD DE,$68E0     ; href="https://skoolkit.ca/disassemblies/rom/hex/asm/3D00.html#3E00">#N$3E00
 $7173 LD BC,$00C8     ; (CHARSET)</a> to #R$68E0.)
 $7176 LDIR            ; }
; Draw the sky.
 $7178 LD HL,$0000     ; {Writes #N$2D to all but the botttom row of the
 $717B LD C,$2D        ; playarea attribute space and UDG #R$6580(#N$00) to
 $717D LD DE,$0200     ; each block using #R$612B.
 $7180 CALL $612B      ; }
; Draw the sea.
 $7183 LD DE,$0020     ; {Writes #N$79 to the bottom row of the playarea
 $7186 LD A,$09        ; attribute space and UDG #R$65C8(#N$09) to each block
 $7188 LD C,$79        ; using #R$612B.
 $718A CALL $612B      ; }
 $718D LD C,$00        ; {Writes #N$00 to the next row down of the attribute
 $718F XOR A           ; space and UDG #R$6580(#N$00) to each block using
 $7190 LD DE,$0020     ; #R$612B.
 $7193 CALL $612B      ; }
 $7196 LD DE,$723F     ; #REGde=#R$723F.
 $7199 LD C,$07        ; #REGc=#N$07.
 $719B LD B,$20        ; #REGb=#N$20.
 $719D CALL $6BD0      ; Call #R$6BD0.
 $71A0 XOR A           ; #REGa=#N$00.
 $71A1 LD DE,$0020     ; #REGde=#N($0020,$04,$04).
 $71A4 LD C,$00        ; #REGc=#N$00.
 $71A6 CALL $612B      ; Call #R$612B.
 $71A9 LD DE,$725F     ; #REGde=#R$725F.
 $71AC LD B,$20        ; #REGb=#N$20.
 $71AE LD C,$07        ; #REGc=#N$07.
 $71B0 CALL $6BD0      ; Call #R$6BD0.
 $71B3 CALL $72BF      ; Call #R$72BF.
 $71B6 LD DE,$727F     ; #REGde=#R$727F.
 $71B9 LD B,$20        ; #REGb=#N$20.
 $71BB LD C,$07        ; #REGc=#N$07.
 $71BD CALL $6BD0      ; Call #R$6BD0.
 $71C0 CALL $72BF      ; Call #R$72BF.
 $71C3 DI              ;
 $71C4 PUSH IX         ;
 $71C6 LD IX,$5AA0     ;
 $71CA LD (IX+$00),$50 ;
 $71CE LD (IX+$1F),$20 ;
 $71D2 LD (IX+$4F),$20 ;
 $71D6 LD (IX+$5F),$20 ;
 $71DA POP IX          ;
 $71DC EI              ;
 $71DD LD HL,$5000     ;
 $71E0 LD B,$20        ;
*$71E2 PUSH BC         ;
 $71E3 PUSH HL         ;
 $71E4 CALL $60B6      ;
 $71E7 LD A,L          ;
 $71E8 POP HL          ;
 $71E9 LD (HL),A       ;
 $71EA INC HL          ;
 $71EB POP BC          ;
 $71EC DJNZ $71E2      ;
 $71EE LD HL,$721A     ;
 $71F1 LD ($5B2A),HL   ;
 $71F4 LD A,$01        ;
 $71F6 LD ($5B00),A    ;
 $71F9 LD HL,($5C78)   ;
 $71FC LD ($5B35),HL   ;
 $71FF LD A,$02        ; #REGa=#N$02.
 $7201 CALL $1601      ; #HTML(Call <a
                       ; href="https://skoolkid.github.io/rom/asm/1601.html">CHAN_OPEN</a>.)
 $7204 LD BC,$0607     ; #REGbc=#N$0607.
 $7207 CALL $0DD9      ; #HTML(Call <a
                       ; href="https://skoolkid.github.io/rom/asm/0DD9.html">CL_SET</a>.)
 $720A LD A,$07        ; {#HTML(Write #N$07 to <a
 $720C LD ($5C8F),A    ; href="https://skoolkid.github.io/rom/asm/5C8F.html">ATTR-T</a>.)
                       ; }
 $720F LD BC,($76BF)   ; #REGbc=#R$76BE(#N$76BF).
 $7213 CALL $1A1B      ; #HTML(Call <a
                       ; href="https://skoolkid.github.io/rom/asm/1A1B.html">OUT_NUM_1</a>.)
 $7216 LD A,"0"        ; {Print "0" to the screen.
 $7218 RST $10         ; }
 $7219 RET             ; Return.

; Data block at 721A
b$721A DEFB $00,$00,$32,$00,$30,$09,$00,$2F
 $7222 DEFB $09,$00,$00,$09,$37,$35,$09,$36
 $722A DEFB $34,$09,$00,$33,$09,$00,$00,$09
 $7232 DEFB $00,$00,$09,$00,$30,$09,$00,$2F
 $723A DEFB $09,$00,$00,$31,$FF

; Data block at 723F
;
; #FOR$00,$1F,,4(n,#UDG($6580+#PEEK(#PC+n)*$08,attr=$07))
b$723F DEFB $00,$7F,$6F,$7B,$7E,$71,$00,$47,$00,$00,$00,$00,$00,$00,$00,$74 ; {UDG IDs.
 $724F DEFB $75,$73,$74,$00,$7F,$6F,$7B,$7E,$71,$00,$00,$00,$00,$00,$00,$00 ; }

; Data block at 725F
;
; #FOR$00,$1F,,4(n,#UDG($6580+#PEEK(#PC+n)*$08,attr=$07))
b$725F DEFB $00,$00,$00,$00,$00,$7F,$7C,$71,$71,$70,$00,$00,$00,$00,$00,$00 ; {UDG IDs.
 $726F DEFB $00,$00,$00,$00,$00,$00,$72,$81,$71,$78,$00,$00,$00,$00,$00,$00 ; }

; Data block at 727F
;
; #FOR$00,$1F,,4(n,#UDG($6580+#PEEK(#PC+n)*$08,attr=$07))
b$727F DEFB $00,$00,$00,$00,$7E,$7B,$6F,$77,$71,$80,$7F,$00,$00,$00,$00,$00 ; {UDG IDs.
 $728F DEFB $00,$00,$00,$00,$00,$6E,$7B,$79,$6E,$7F,$00,$00,$00,$00,$00,$00 ; }

; Gauge Data
;
; #FOR$00,$1F,,4(n,#UDG($6580+#PEEK(#PC+n)*$08,attr=$30))
@label=Data_Gauge
b$729F DEFB $6A,$6A,$6A,$6A,$6A,$6A,$6A,$6A,$6A,$6A,$6A,$6A,$6A,$6A,$6A,$68 ; {UDG IDs.
 $72AF DEFB $69,$6B,$6B,$6B,$6B,$6B,$6B,$6B,$6B,$6B,$6B,$6B,$6B,$6B,$6B,$6B ; }

; Draw Gauge
;
; Used by the routine at #R$7162.
@label=Draw_Gauge
c$72BF LD DE,$729F   ; #REGde=#R$729F (UDG data).
 $72C2 LD C,$30      ; #REGc=#N$30 (colour attribute).
 $72C4 LD B,$20      ; #REGb=#N$20 (data length).
 $72C6 CALL $6BD0    ; Call #R$6BD0.
 $72C9 RET           ; Return.

; Routine at 72CA
;
; Used by the routine at #R$7554.
c$72CA LD A,($5B22)    ; #REGa=#R$5B22
 $72CD OR A            ;
 $72CE RET Z           ;
 $72CF DEC A           ;
 $72D0 JR NZ,$731D     ;
 $72D2 LD A,($5B06)    ;
 $72D5 DEC A           ;
 $72D6 JR NZ,$72DD     ;
 $72D8 LD A,$64        ;
 $72DA CALL $7416      ;
*$72DD LD HL,($5B20)   ;
 $72E0 LD A,H          ;
 $72E1 BIT 7,A         ;
 $72E3 JR Z,$72E7      ;
 $72E5 LD H,$00        ;
*$72E7 CP $10          ;
 $72E9 JR C,$72EC      ;
 $72EB DEC H           ;
*$72EC PUSH HL         ;
 $72ED LD DE,$73C2     ;
 $72F0 LD A,H          ;
 $72F1 CP $0A          ;
 $72F3 JR NC,$72FF     ;
 $72F5 LD DE,$73EC     ;
 $72F8 CP $05          ;
 $72FA JR C,$72FF      ;
 $72FC LD DE,$73D7     ;
*$72FF LD A,$02        ;
 $7301 LD ($5B22),A    ;
 $7304 LD HL,$7401     ;
 $7307 EX DE,HL        ;
 $7308 LD BC,$0015     ;
 $730B LDIR            ;
 $730D POP HL          ;
 $730E LD ($7401),HL   ;
 $7311 LD ($7408),HL   ;
 $7314 LD ($740F),HL   ;
 $7317 DEC L           ;
 $7318 LD A,$4B        ;
 $731A CALL $739D      ;
*$731D LD B,$03        ;
 $731F PUSH IX         ;
 $7321 DI              ;
 $7322 LD IX,$7401     ;
*$7326 PUSH BC         ;
 $7327 BIT 0,(IX+$05)  ;
 $732B JR Z,$7374      ;
 $732D LD L,(IX+$00)   ;
 $7330 LD H,(IX+$01)   ;
 $7333 DEC L           ;
 $7334 PUSH HL         ;
 $7335 LD A,(IX+$02)   ;
 $7338 CALL $739D      ;
 $733B POP HL          ;
 $733C DEC (IX+$06)    ;
 $733F JR Z,$7370      ;
 $7341 LD A,(IX+$03)   ;
 $7344 ADD A,H         ;
 $7345 LD H,A          ;
 $7346 INC A           ;
 $7347 JR Z,$7370      ;
 $7349 CP $11          ;
 $734B JR NC,$7370     ;
 $734D LD A,(IX+$04)   ;
 $7350 ADD A,L         ;
 $7351 LD L,A          ;
 $7352 AND $E0         ;
 $7354 JR NZ,$7370     ;
 $7356 INC (IX+$02)    ;
 $7359 LD A,(IX+$02)   ;
 $735C CP $4B          ;
 $735E JR NZ,$7365     ;
 $7360 LD A,$48        ;
 $7362 LD (IX+$02),A   ;
*$7365 LD (IX+$00),L   ;
 $7368 LD (IX+$01),H   ;
 $736B CALL $739D      ;
 $736E JR $7374        ;
*$7370 LD (IX+$05),$00 ;
*$7374 POP BC          ;
 $7375 LD DE,$0007     ;
 $7378 ADD IX,DE       ;
 $737A DJNZ $7326      ;
 $737C LD IX,$7401     ;
 $7380 LD A,(IX+$05)   ;
 $7383 OR (IX+$0C)     ;
 $7386 OR (IX+$13)     ;
 $7389 POP IX          ;
 $738B EI              ;
 $738C RET NZ          ;
 $738D LD A,$03        ;
 $738F LD ($5B22),A    ;
 $7392 LD C,$FF        ;
 $7394 CALL $6F47      ;
 $7397 LD C,$FF        ;
 $7399 CALL $6F47      ;
 $739C RET             ;

; Routine at 739D
;
; Used by the routines at #R$72CA and #R$78B0.
c$739D PUSH AF         ;
 $739E CALL $60F6      ;
 $73A1 LD A,(DE)       ;
 $73A2 CP $24          ;
 $73A4 JR NZ,$73AC     ;
 $73A6 LD (IX+$05),$00 ;
 $73AA POP AF          ;
 $73AB RET             ;
*$73AC XOR $05         ;
 $73AE LD (DE),A       ;
 $73AF CALL $60D6      ;
 $73B2 POP AF          ;
 $73B3 CALL $60E8      ;
 $73B6 LD H,B          ;
 $73B7 LD L,C          ;
 $73B8 LD B,$08        ;
*$73BA LD A,(DE)       ;
 $73BB XOR (HL)        ;
 $73BC LD (HL),A       ;
 $73BD INC DE          ;
 $73BE INC H           ;
 $73BF DJNZ $73BA      ;
 $73C1 RET             ;
 $73C2 NOP             ;
 $73C3 NOP             ;
 $73C4 LD C,B          ;
 $73C5 RST $38         ;
 $73C6 LD BC,$0A01     ;
 $73C9 NOP             ;
 $73CA NOP             ;
 $73CB LD C,C          ;
 $73CC NOP             ;
 $73CD LD (BC),A       ;
 $73CE LD BC,$000F     ;
 $73D1 NOP             ;
 $73D2 LD C,D          ;
 $73D3 RST $38         ;
 $73D4 LD (BC),A       ;
 $73D5 LD BC,$0014     ;
 $73D8 NOP             ;
 $73D9 LD C,B          ;
 $73DA LD BC,$0102     ;
 $73DD LD C,$00        ;
 $73DF NOP             ;
 $73E0 LD C,C          ;
 $73E1 NOP             ;
 $73E2 LD BC,$1901     ;
 $73E5 NOP             ;
 $73E6 NOP             ;
 $73E7 LD C,D          ;
 $73E8 RST $38         ;
 $73E9 LD BC,$0701     ;
 $73EC NOP             ;
 $73ED NOP             ;
 $73EE LD C,B          ;
 $73EF NOP             ;
 $73F0 LD (BC),A       ;
 $73F1 LD BC,$000D     ;
 $73F4 NOP             ;
 $73F5 LD C,C          ;
 $73F6 LD BC,$0102     ;
 $73F9 INC D           ;
 $73FA NOP             ;
 $73FB NOP             ;
 $73FC LD C,D          ;
 $73FD LD (BC),A       ;
 $73FE LD BC,$0901     ;
 $7401 OR (HL)         ;
 $7402 DEC HL          ;
 $7403 JR NZ,$7448     ;
 $7405 LD D,B          ;
 $7406 JR NZ,$7454     ;
 $7408 DEC C           ;
 $7409 RET NZ          ;
 $740A DEC HL          ;
 $740B JR NZ,$7457     ;
 $740D LD D,D          ;
 $740E JR NZ,$746A     ;
 $7410 INC L           ;
 $7411 LD C,L          ;
 $7412 LD D,H          ;
 $7413 DEC (HL)        ;
 $7414 DEC C           ;
 $7415 JP Z,$1B2A      ;
 $7418 LD E,E          ;
 $7419 ADD A,L         ;
 $741A LD L,A          ;
 $741B JR NC,$741E     ;
 $741D INC H           ;
*$741E LD ($5B1B),HL   ;
 $7421 PUSH HL         ;
 $7422 LD BC,$061A     ;
 $7425 CALL $0DD9      ;
 $7428 LD A,$07        ;
 $742A LD ($5C8F),A    ;
 $742D POP BC          ;
 $742E CALL $1A1B      ;
 $7431 LD A,$30        ;
 $7433 RST $10         ;
 $7434 RET             ;
; This entry point is used by the routine at #R$7554.
*$7435 LD HL,$5C78     ;
 $7438 LD A,(HL)       ;
 $7439 ADD A,$07       ;
*$743B CP (HL)         ;
 $743C JR NZ,$743B     ;
 $743E CALL $6FD8      ;
 $7441 CALL $70A8      ;
 $7444 LD A,($5B0B)    ;
 $7447 LD HL,($5B20)   ;
 $744A DEC A           ;
 $744B JR NZ,$7454     ;
*$744D INC H           ;
 $744E LD ($5B20),HL   ;
 $7451 DEC H           ;
 $7452 JR $74B0        ;
*$7454 LD A,($5B06)    ;
*$7457 OR A            ;
 $7458 JR NZ,$744D     ;
 $745A PUSH HL         ;
 $745B LD HL,$5C78     ;
 $745E LD A,(HL)       ;
 $745F ADD A,$07       ;
*$7461 CP (HL)         ;
 $7462 JR NZ,$7461     ;
 $7464 CALL $70A8      ;
 $7467 POP HL          ;
 $7468 LD BC,$F7FE     ;
 $746B IN A,(C)        ;
 $746D LD BC,$EFFE     ;
 $7470 LD E,A          ;
 $7471 IN A,(C)        ;
 $7473 ADD A,A         ;
 $7474 ADD A,A         ;
 $7475 XOR E           ;
 $7476 BIT 4,A         ;
 $7478 JR Z,$7482      ;
 $747A BIT 4,E         ;
 $747C JR Z,$7481      ;
 $747E INC L           ;
 $747F JR $7482        ;
*$7481 DEC L           ;
*$7482 IN A,(C)        ;
 $7484 LD E,A          ;
 $7485 ADD A,A         ;
 $7486 XOR E           ;
 $7487 BIT 4,A         ;
 $7489 JR Z,$7493      ;
 $748B BIT 4,E         ;
 $748D JR Z,$7492      ;
 $748F DEC H           ;
 $7490 JR $7493        ;
*$7492 INC H           ;
*$7493 LD A,L          ;
 $7494 OR A            ;
 $7495 JR NZ,$7498     ;
 $7497 INC L           ;
*$7498 CP $1E          ;
 $749A JR NZ,$749D     ;
 $749C DEC L           ;
*$749D LD A,H          ;
 $749E OR A            ;
 $749F JR NZ,$74A2     ;
 $74A1 INC H           ;
*$74A2 LD DE,($5B20)   ;
 $74A6 PUSH DE         ;
 $74A7 LD ($5B20),HL   ;
 $74AA OR A            ;
 $74AB SBC HL,DE       ;
 $74AD POP HL          ;
 $74AE JR Z,$7435      ;
*$74B0 XOR A           ;
 $74B1 LD C,$2D        ;
 $74B3 PUSH HL         ;
 $74B4 CALL $6114      ;
 $74B7 POP HL          ;
 $74B8 XOR A           ;
 $74B9 LD C,$2D        ;
 $74BB PUSH HL         ;
 $74BC INC L           ;
 $74BD CALL $6114      ;
 $74C0 LD HL,($5B20)   ;
 $74C3 CALL $60F6      ;
 $74C6 LD A,(DE)       ;
 $74C7 CP $2D          ;
 $74C9 JR Z,$74E0      ;
 $74CB CP $2F          ;
 $74CD JR Z,$74E0      ;
*$74CF LD A,($5B06)    ;
 $74D2 DEC A           ;
 $74D3 LD A,$64        ;
 $74D5 CALL Z,$7416    ;
 $74D8 LD A,$4D        ;
 $74DA LD ($5B46),A    ;
 $74DD POP HL          ;
 $74DE JR $74ED        ;
*$74E0 INC DE          ;
 $74E1 LD A,(DE)       ;
 $74E2 CP $2D          ;
 $74E4 JR Z,$74EA      ;
 $74E6 CP $2F          ;
 $74E8 JR NZ,$74CF     ;
*$74EA LD A,$2F        ;
 $74EC POP DE          ;
*$74ED PUSH HL         ;
 $74EE PUSH AF         ;
 $74EF LD C,$28        ;
 $74F1 CALL $6114      ;
 $74F4 LD C,$28        ;
 $74F6 POP AF          ;
 $74F7 INC A           ;
 $74F8 POP HL          ;
 $74F9 PUSH HL         ;
 $74FA INC L           ;
 $74FB CALL $6114      ;
 $74FE POP HL          ;
 $74FF LD A,($5B46)    ;
 $7502 OR A            ;
 $7503 JR NZ,$7533     ;
 $7505 LD A,($5B0B)    ;
 $7508 DEC A           ;
 $7509 JP Z,$7435      ;
 $750C LD A,($5B06)    ;
 $750F OR A            ;
 $7510 JP NZ,$7435     ;
 $7513 LD A,H          ;
 $7514 CP $0E          ;
 $7516 JP NZ,$7435     ;
 $7519 LD A,L          ;
 $751A SUB $0D         ;
 $751C JP C,$7435      ;
 $751F CP $03          ;
 $7521 JP NC,$7435     ;
 $7524 LD A,$C8        ;
 $7526 CALL $7416      ;
 $7529 CALL $7890      ;
 $752C CALL $7890      ;
 $752F CALL $7890      ;
 $7532 RET             ;

; Routine at 7533
;
; Used by the routine at #R$739D.
c$7533 LD C,$00      ;
 $7535 CALL $6F47    ;
 $7538 LD A,$03      ;
 $753A LD ($5B22),A  ;
 $753D RET           ; Return.

; Data block at 753E
b$753E DEFB $11,$00                         ; PAPER: #COLOUR(#PEEK(#PC+$01)).
 $7540 DEFB $10,$07                         ; INK: #COLOUR(#PEEK(#PC+$01)).
 $7542 DEFB $16,$15,$00                     ; AT #N(#PEEK(#PC+$01)),
                                            ; #N(#PEEK(#PC+$02)).
 $7545 DEFB $93,$10,$FF,$93,$D0,$02,$10,$2F ; {????
 $754D DEFB $02,$D0,$04,$10,$3F,$04,$D0     ; }

; Game Entry Point
c$7554 CALL $78B0    ; {Call #R$7554 three times.
 $7557 CALL $78B0    ;
 $755A CALL $78B0    ; }
 $755D LD A,$08      ; {#HTML(#REGa=<a
 $755F LD ($5C6A),A  ; href="https://skoolkid.github.io/rom/asm/5C6A.html">FLAGS2</a>
                     ; set CAPS LOCK on.)}
 $7562 LD A,$02      ; {#HTML(<a
 $7564 CALL $1601    ; href="https://skoolkid.github.io/rom/asm/1601.html">CHAN_OPEN</a>
                     ; (open upper screen channel).)}
 $7567 LD DE,$753E   ; #REGde=#R$753E
 $756A LD BC,$0007   ; #REGbc=Characters to print.
 $756D CALL $203C    ; #HTML(Call <a
                     ; href="https://skoolkid.github.io/rom/asm/1FFC.html#203C">PR_STRING</a>.)
 $7570 LD DE,$7862   ; #REGde=#R$7862
 $7573 LD BC,$0020   ; #REGbc=Characters to print.
 $7576 CALL $203C    ; #HTML(Call <a
                     ; href="https://skoolkid.github.io/rom/asm/1FFC.html#203C">PR_STRING</a>.)
*$7579 LD HL,$5B00   ; #REGhl=#N$5B00
 $757C LD B,$5A      ;
*$757E LD (HL),$00   ;
 $7580 INC HL        ;
 $7581 DJNZ $757E    ;
*$7583 LD A,($5C05)  ; #HTML(#REGa=#2 <a
                     ; href="https://skoolkid.github.io/rom/asm/5C00.html">KSTATE</a>
                     ; call counter.)
 $7586 OR A          ; {If #REGa is zero jump back to #R$7583.
 $7587 JR Z,$7583    ; }
 $7589 LD A,($5C08)  ; #HTML(#REGa=<a
                     ; href="https://skoolkid.github.io/rom/asm/5C08.html">LAST-K</a>
                     ; (last key pressed).)
 $758C SUB $31       ; Subtract #N$31.
 $758E JR C,$7583    ; If there is carry jump back to #R$7583.
 $7590 CP $05        ; Is the result #N$05?
 $7592 JR NC,$7583   ; If there is no carry jump back to #R$7583.
 $7594 INC A         ; Increment #REGa by one.
 $7595 LD ($5B27),A  ; Store #REGa at #R$5B27.
 $7598 LD HL,($5C78) ; #HTML(#REGhl=<a
                     ; href="https://skoolkid.github.io/rom/asm/5C78.html">FRAMES</a>
                     ; as a random number seed.)
 $759B LD ($5B35),HL ;
 $759E LD HL,$0E08   ;
 $75A1 LD ($5B20),HL ;
 $75A4 LD DE,$5B0A   ; {Copy #N$0F bytes of data from #R$7545 to #N$5B0A.
 $75A7 LD HL,$7545   ;
 $75AA LD BC,$000F   ;
 $75AD LDIR          ; }
 $75AF LD A,($5B27)  ;
 $75B2 LD B,A        ;
 $75B3 ADD A,$03     ;
 $75B5 LD ($5B14),A  ;
 $75B8 LD ($5B17),A  ;
 $75BB SRL A         ;
 $75BD LD ($5B0F),A  ;
 $75C0 LD ($5B12),A  ;
 $75C3 LD A,($5B27)  ;
 $75C6 ADD A,A       ;
 $75C7 LD B,A        ;
 $75C8 LD A,$19      ;
 $75CA SUB B         ;
 $75CB LD ($5B2F),A  ;
*$75CE CALL $7162    ;
 $75D1 LD HL,$5C78   ; #HTML(#REGhl=<a
                     ; href="https://skoolkid.github.io/rom/asm/5C78.html">FRAMES</a>
                     ; as a random number seed.)
 $75D4 LD A,(HL)     ;
 $75D5 ADD A,$08     ;
*$75D7 CP (HL)       ;
 $75D8 JR NZ,$75D7   ;
 $75DA LD A,($5B00)  ;
 $75DD CP $03        ;
 $75DF JR NZ,$75CE   ;
*$75E1 LD A,($5C05)  ; #HTML(#REGa=#2 <a
                     ; href="https://skoolkid.github.io/rom/asm/5C00.html">KSTATE</a>
                     ; call counter.)
 $75E4 OR A          ;
 $75E5 JR Z,$75E1    ;
 $75E7 LD A,($5C08)  ; #HTML(#REGa=<a
                     ; href="https://skoolkid.github.io/rom/asm/5C08.html">LAST-K</a>
                     ; (last key pressed).)
 $75EA CP $37        ;
 $75EC JR NZ,$75E1   ;
 $75EE XOR A         ;
 $75EF LD ($5B00),A  ;
 $75F2 LD HL,$0E08   ;
 $75F5 LD C,$2D      ;
 $75F7 PUSH HL       ;
 $75F8 CALL $6114    ;
 $75FB POP HL        ;
 $75FC INC L         ;
 $75FD XOR A         ;
 $75FE LD C,$2D      ;
 $7600 CALL $6114    ;
; Todo...
*$7603 CALL $6000    ; Call #R$6000.
 $7606 CALL $72CA    ; Call #R$72CA.
 $7609 LD A,($5B00)  ; #REGa=#R$5B00
 $760C CP $0D        ;
 $760E JR Z,$7619    ;
*$7610 LD A,($5B22)  ;
 $7613 CP $03        ;
 $7615 JR C,$7603    ;
 $7617 JR $763A      ;
*$7619 LD A,($5B22)  ;
 $761C OR A          ;
 $761D JR NZ,$7610   ;
 $761F CALL $7435    ;
*$7622 LD A,($5B06)  ;
 $7625 OR A          ;
 $7626 JR Z,$763A    ;
 $7628 CP $03        ;
 $762A JR NC,$763A   ;
 $762C CALL $70A8    ;
 $762F LD HL,$5C78   ; #HTML(#REGhl=<a
                     ; href="https://skoolkid.github.io/rom/asm/5C78.html">FRAMES</a>
                     ; as a random number seed.)
 $7632 LD A,(HL)     ;
 $7633 ADD A,$08     ;
*$7635 CP (HL)       ;
 $7636 JR NZ,$7635   ;
 $7638 JR $7622      ;
*$763A LD HL,$5C78   ; #HTML(#REGhl=<a
                     ; href="https://skoolkid.github.io/rom/asm/5C78.html">FRAMES</a>
                     ; as a random number seed.)
 $763D LD A,(HL)     ;
 $763E ADD A,$32     ;
*$7640 CP (HL)       ;
 $7641 JR NZ,$7640   ;
 $7643 CALL $76C1    ;
 $7646 JP $7579      ; Jump back to #R$7579.

; High Score Table.
;
; .
;
; .
;
; High Score entry #EVAL($0A-(#PC-$7649)/$0C)
@label=HIGH_SCORE_TABLE
b$7649 DEFM "DURELL"    ; Name
 $764F DEFB $00         ; Level
 $7650 DEFB $00,$00     ; Hits
 $7652 DEFB $00,$0A,$00 ; Score
; High Score entry #EVAL($0A-(#PC-$7649)/$0C)
 $7655 DEFM "DURELL"    ; Name
 $765B DEFB $00         ; Level
 $765C DEFB $00,$00     ; Hits
 $765E DEFB $00,$0A,$00 ; Score
; High Score entry #EVAL($0A-(#PC-$7649)/$0C)
 $7661 DEFM "DURELL"    ; Name
 $7667 DEFB $00         ; Level
 $7668 DEFB $00,$00     ; Hits
 $766A DEFB $00,$0A,$00 ; Score
; High Score entry #EVAL($0A-(#PC-$7649)/$0C)
 $766D DEFM "DURELL"    ; Name
 $7673 DEFB $00         ; Level
 $7674 DEFB $00,$00     ; Hits
 $7676 DEFB $00,$0A,$00 ; Score
; High Score entry #EVAL($0A-(#PC-$7649)/$0C)
 $7679 DEFM "DURELL"    ; Name
 $767F DEFB $00         ; Level
 $7680 DEFB $00,$00     ; Hits
 $7682 DEFB $00,$0A,$00 ; Score
; High Score entry #EVAL($0A-(#PC-$7649)/$0C)
 $7685 DEFM "DURELL"    ; Name
 $768B DEFB $00         ; Level
 $768C DEFB $00,$00     ; Hits
 $768E DEFB $00,$0A,$00 ; Score
; High Score entry #EVAL($0A-(#PC-$7649)/$0C)
 $7691 DEFM "DURELL"    ; Name
 $7697 DEFB $00         ; Level
 $7698 DEFB $00,$00     ; Hits
 $769A DEFB $00,$0A,$00 ; Score
; High Score entry #EVAL($0A-(#PC-$7649)/$0C)
 $769D DEFM "DURELL"    ; Name
 $76A3 DEFB $00         ; Level
 $76A4 DEFB $00,$00     ; Hits
 $76A6 DEFB $00,$0A,$00 ; Score
; High Score entry #EVAL($0A-(#PC-$7649)/$0C)
 $76A9 DEFM "DURELL"    ; Name
 $76AF DEFB $00         ; Level
 $76B0 DEFB $00,$00     ; Hits
 $76B2 DEFB $00,$0A,$00 ; Score
; High Score entry #EVAL($0A-(#PC-$7649)/$0C)
 $76B5 DEFM "DURELL"    ; Name
 $76BB DEFB $00         ; Level
 $76BC DEFB $00,$00     ; Hits
 $76BE DEFB $00,$0A,$00 ; Score

; Routine at 76C1
;
; Used by the routine at #R$7554.
c$76C1 LD ($5B47),IX  ;
 $76C5 DI             ; Disables interrupts.
 $76C6 LD HL,($5B1B)  ;
 $76C9 LD DE,($7653)  ;
 $76CD LD A,L         ;
 $76CE SUB E          ;
 $76CF LD A,H         ;
 $76D0 SBC A,D        ;
 $76D1 JR C,$7725     ;
 $76D3 LD IX,$7649    ;
 $76D7 LD DE,$000C    ;
 $76DA LD B,$0A       ;
*$76DC LD A,L         ;
 $76DD SUB (IX+$0A)   ;
 $76E0 LD A,H         ;
 $76E1 SBC A,(IX+$0B) ;
 $76E4 JR C,$76EA     ;
 $76E6 ADD IX,DE      ;
 $76E8 DJNZ $76DC     ;
*$76EA PUSH IX        ;
 $76EC POP HL         ;
 $76ED OR A           ;
 $76EE SBC HL,DE      ;
 $76F0 PUSH HL        ;
 $76F1 LD DE,$7649    ;
 $76F4 LD A,$0A       ;
 $76F6 SUB B          ;
 $76F7 ADD A,A        ;
 $76F8 ADD A,A        ;
 $76F9 LD B,A         ;
 $76FA ADD A,A        ;
 $76FB ADD A,B        ;
 $76FC JR Z,$7706     ;
 $76FE LD C,A         ;
 $76FF LD B,$00       ;
 $7701 LD HL,$7655    ;
 $7704 LDIR           ;
*$7706 POP HL         ;
 $7707 LD B,$06       ;
*$7709 LD (HL),$80    ;
 $770B INC HL         ;
 $770C DJNZ $7709     ;
 $770E LD A,($5B27)   ;
 $7711 LD (HL),A      ;
 $7712 INC HL         ;
 $7713 LD (HL),$00    ;
 $7715 INC HL         ;
 $7716 LD BC,($5B49)  ;
 $771A LD (HL),C      ;
 $771B INC HL         ;
 $771C LD (HL),B      ;
 $771D INC HL         ;
 $771E LD BC,($5B1B)  ;
 $7722 LD (HL),C      ;
 $7723 INC HL         ;
 $7724 LD (HL),B      ;
*$7725 LD IX,($5B47)  ;
 $7729 LD DE,$77F6    ; #REGde=#R$77F6
 $772C LD BC,$0068    ; #REGbc=Characters to print.
 $772F CALL $203C     ; #HTML(Call <a
                      ; href="https://skoolkid.github.io/rom/asm/1FFC.html#203C">PR_STRING</a>.)
 $7732 LD B,$0A       ;
 $7734 LD HL,$76B5    ;
*$7737 PUSH BC        ;
 $7738 XOR A          ;
 $7739 LD ($5B4B),A   ;
 $773C LD ($5B4C),A   ;
*$773F CALL $777C     ;
 $7742 PUSH HL        ;
 $7743 LD HL,$5B4C    ;
 $7746 INC (HL)       ;
 $7747 LD A,$06       ;
 $7749 CP (HL)        ;
 $774A POP HL         ;
 $774B JR NZ,$773F    ;
 $774D LD B,$0C       ;
 $774F CALL $77E3     ;
 $7752 LD B,$13       ;
 $7754 CALL $77E3     ;
 $7757 LD B,$19       ;
 $7759 CALL $77E3     ;
 $775C PUSH HL        ;
 $775D LD A,$30       ; {Print "0" to the screen.
 $775F RST $10        ; }
 $7760 LD BC,$0003    ; #REGbc=Characters to print.
 $7763 LD DE,$7884    ; #REGde=#R$7884
 $7766 CALL $203C     ; #HTML(Call <a
                      ; href="https://skoolkid.github.io/rom/asm/1FFC.html#203C">PR_STRING</a>.)
 $7769 POP HL         ;
 $776A LD DE,$FFE8    ;
 $776D ADD HL,DE      ;
 $776E POP BC         ;
 $776F DJNZ $7737     ;
 $7771 LD DE,$783F    ; #REGde=#R$783F
 $7774 LD BC,$0045    ; #REGbc=Characters to print.
 $7777 CALL $203C     ; #HTML(Call <a
                      ; href="https://skoolkid.github.io/rom/asm/1FFC.html#203C">PR_STRING</a>.)
 $777A EI             ; Enable interrupts.
 $777B RET            ; Return.
*$777C LD A,(HL)      ;
 $777D INC HL         ;
 $777E PUSH HL        ;
 $777F BIT 7,A        ;
 $7781 JR NZ,$7786    ;
 $7783 RST $10        ;
 $7784 POP HL         ;
 $7785 RET            ;
*$7786 LD A,($5B4B)   ;
 $7789 OR A           ;
 $778A JR Z,$7790     ;
 $778C LD A,$20       ;
 $778E JR $77D4       ;
*$7790 LD BC,$0006    ; #REGbc=Characters to print.
 $7793 LD DE,$788A    ; #REGde=#R$788A
 $7796 CALL $203C     ; #HTML(Call <a
                      ; href="https://skoolkid.github.io/rom/asm/1FFC.html#203C">PR_STRING</a>.)
 $7799 EI             ; Enable interrupts.
*$779A LD A,($5C05)   ;
 $779D OR A           ;
 $779E JR Z,$779A     ;
 $77A0 LD A,($5C08)   ;
 $77A3 BIT 7,A        ;
 $77A5 JR NZ,$779A    ;
 $77A7 CP $0D         ;
 $77A9 JR NZ,$77B2    ;
 $77AB LD A,$20       ;
 $77AD LD ($5B4B),A   ;
 $77B0 JR $77D4       ;
*$77B2 CP $0C         ;
 $77B4 JR NZ,$77D0    ;
 $77B6 LD A,($5B4C)   ;
 $77B9 OR A           ;
 $77BA JR Z,$779A     ;
 $77BC DEC A          ;
 $77BD LD ($5B4C),A   ;
 $77C0 LD DE,$7887    ; #REGde=#R$7887
 $77C3 LD BC,$0009    ; #REGbc=Characters to print.
 $77C6 CALL $203C     ; #HTML(Call <a
                      ; href="https://skoolkid.github.io/rom/asm/1FFC.html#203C">PR_STRING</a>.)
 $77C9 POP HL         ;
 $77CA DEC HL         ;
 $77CB PUSH HL        ;
 $77CC LD (HL),$80    ;
 $77CE JR $779A       ;
*$77D0 CP $20         ;
 $77D2 JR C,$779A     ;
*$77D4 PUSH AF        ;
 $77D5 RST $10        ;
*$77D6 LD A,($5C05)   ;
 $77D9 OR A           ;
 $77DA JR NZ,$77D6    ;
 $77DC DI             ;
 $77DD POP AF         ;
 $77DE POP HL         ;
 $77DF DEC HL         ;
 $77E0 LD (HL),A      ;
 $77E1 INC HL         ;
 $77E2 RET            ;
*$77E3 PUSH HL        ;
 $77E4 PUSH BC        ;
 $77E5 LD A,$17       ;
 $77E7 RST $10        ;
 $77E8 POP AF         ;
 $77E9 RST $10        ;
 $77EA RST $10        ;
 $77EB POP HL         ;
 $77EC LD C,(HL)      ;
 $77ED INC HL         ;
 $77EE LD B,(HL)      ;
 $77EF INC HL         ;
 $77F0 PUSH HL        ;
 $77F1 CALL $1A1B     ;
 $77F4 POP HL         ;
 $77F5 RET            ;

; Messaging: #1
@label=Messaging_SplashScreen
t$77F6 DEFB $10,$09                              ; INK $09 (contrast - i.e.
                                                 ; "white")
 $77F8 DEFB $11,$00                              ; PAPER $00 ("black")
 $77FA DEFB $16,$00,$00                          ; AT $00,$00
 $77FD DEFB $17,$1F,$00                          ; TAB
 $7800 DEFB $17,$06,$00                          ; TAB
 $7803 DEFM "* HARRIER ATTACK *"                 ; Harrier Attack Game Title
 $7815 DEFB $17,$06,$00                          ; TAB
 $7818 DEFB $17,$00,$00                          ; TAB
 $781B DEFB $11,$06                              ; PAPER $06 ("yellow")
 $781D DEFM "  NAME    LEVEL   HITS   SCORE    " ; "NAME", "LEVEL", "HITS",
                                                 ; "SCORE" texts.
; Block #2
 $783F DEFM "                               "    ; Whitespace or buffer?
 $785E DEFB $11,$00                              ; PAPER $00 ("black")
 $7860 DEFB $13,$01                              ; BRIGHT ON
@label=TEXT_SKILL_LEVEL
 $7862 DEFM "    ENTER SKILL LEVEL (1TO5)    "   ; "ENTER SKILL LEVEL (1TO5)"
                                                 ; text.
 $7882 DEFB $13,$00                              ; ENTER (i.e. "NEWLINE")
 $7884 DEFB $17,$01,$00                          ; TAB
 $7887 DEFB $20                                  ; SPACE
 $7888 DEFB $08                                  ; CURSOR LEFT
 $7889 DEFB $08                                  ; CURSOR LEFT
 $788A DEFB $12,$01                              ; FLASH ON
 $788C DEFB $20                                  ; SPACE
 $788D DEFB $12,$00                              ; FLASH OFF
 $788F DEFB $08                                  ; CURSOR LEFT

; Routine at 7890
;
; Used by the routine at #R$739D.
c$7890 LD B,$37      ; #REGb=#N$37 (counter).
 $7892 LD HL,$09C4   ; #REGhl=#N$09C4 (loop delay parameter).
*$7895 LD DE,$0001   ; #REGde=#N($0001,$04,$04) (number of passes).
 $7898 PUSH BC       ; {Stash #REGbc and #REGhl on the stack.
 $7899 PUSH HL       ; }
 $789A CALL $03B5    ; #HTML(Call <a
                     ; href="https://skoolkit.ca/disassemblies/rom/hex/asm/03B5.html">BEEPER</a>.)
 $789D POP HL        ; Restore #REGhl from the stack.
 $789E LD BC,$001E   ; {#REGhl-=#N($001E,$04,$04).
 $78A1 SBC HL,BC     ; }
 $78A3 POP BC        ; Restore #REGbc from the stack.
 $78A4 DJNZ $7895    ; Decrease counter by one and loop back to #R$7895 until
                     ; counter is zero.
 $78A6 LD HL,$5C78   ; {#HTML(#REGa=<a
 $78A9 LD A,(HL)     ; href="https://skoolkid.github.io/rom/asm/5C78.html">FRAMES</a>.)
                     ; }
 $78AA ADD A,$08     ; #REGa+=#N$08.
*$78AC CP (HL)       ; {#HTML(Loop until #REGa and <a
 $78AD JR NZ,$78AC   ; href="https://skoolkid.github.io/rom/asm/5C78.html">FRAMES</a>
                     ; are equal.)}
 $78AF RET           ; Return.

; Routine at 78B0
;
; Used by the routine at #R$7554.
c$78B0 LD HL,$0D0A   ;
 $78B3 LD ($5B20),HL ;
 $78B6 LD A,$4C      ;
 $78B8 CALL $739D    ;
*$78BB LD C,$14      ;
 $78BD CALL $6F47    ;
 $78C0 LD HL,($5B20) ;
 $78C3 LD A,$4C      ;
 $78C5 CALL $739D    ;
 $78C8 LD HL,($5B20) ;
 $78CB INC L         ;
 $78CC INC H         ;
 $78CD LD A,L        ;
 $78CE CP $20        ;
 $78D0 JR Z,$78E1    ;
 $78D2 LD A,H        ;
 $78D3 CP $18        ;
 $78D5 JR Z,$78E1    ;
 $78D7 LD ($5B20),HL ;
 $78DA LD A,$4C      ;
 $78DC CALL $739D    ;
 $78DF JR $78BB      ;
*$78E1 LD C,$00      ;
 $78E3 CALL $6F47    ;
 $78E6 LD C,$00      ;
 $78E8 CALL $6F47    ;
 $78EB RET           ;

; Unused
u$78EC DEFB $00,$8E,$2F,$4D,$49

